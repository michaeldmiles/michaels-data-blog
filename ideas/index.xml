<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Real World Data Science</title>
<link>https://michaeldmiles.github.io/michaels-data-blog/ideas/index.html</link>
<atom:link href="https://michaeldmiles.github.io/michaels-data-blog/ideas/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<image>
<url>https://michaeldmiles.github.io/michaels-data-blog/images/rwds-logo-150px.png</url>
<title>Real World Data Science</title>
<link>https://michaeldmiles.github.io/michaels-data-blog/ideas/index.html</link>
<height>83</height>
<width>144</width>
</image>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Tue, 12 Dec 2023 00:00:00 GMT</lastBuildDate>
<item>
  <title>Creating Christmas cards with R</title>
  <dc:creator>Nicola Rennie</dc:creator>
  <link>https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/xmas-cards.html</link>
  <description><![CDATA[ 




<p>When you think about data visualisation in R <span class="citation" data-cites="R-base">(R Core Team 2022)</span>, you’d be forgiven for not jumping straight to thinking about creating Christmas cards. However, the package and functions we often use to create bar charts and line graphs can be repurposed to create festive images. This tutorial provides a step-by-step guide to creating a Christmas card featuring a snowman – entirely in R. Though this seems like just a fun exercise, the functions and techniques you learn in this tutorial can also transfer into more traditional data visualisations created using {ggplot2} <span class="citation" data-cites="ggplot2">(Wickham 2016)</span> in R.</p>
<p>The code in this tutorial relies on the following packages:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggforce)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span></code></pre></div>
<blockquote class="blockquote">
<p>You may also have seen this tutorial presented at the <a href="https://github.com/nrennie/oxford-RUG-christmas-cards">Oxford R User Group November 2023 Meetup</a>.</p>
</blockquote>
<section id="lets-build-a-snowman" class="level2">
<h2 class="anchored" data-anchor-id="lets-build-a-snowman">Let’s build a snowman!</h2>
<p>Before we jump in to writing R code, let’s take a step back and think about what you actually need to build a snowman. If you were given some crayons and a piece of paper, what would you draw?</p>
<p>You might draw two or three circles to make up the head and body. Perhaps some smaller dots for buttons and eyes, and a (rudimentary) hat constructed from some rectangles. Some brown lines create sticks for arms and, of course, a triangle to represent a carrot for a nose. For the background elements of our Christmas card, we also need the night sky (or day if you prefer), a light dusting of snow covering the ground, and a few snowflakes falling from the sky.</p>
<p>Now lines, rectangles, circles, and triangles are all just simple geometric objects. Crucially, they’re all things that we can create with {ggplot2} in R.</p>
</section>
<section id="build-a-snowman-with-r" class="level2">
<h2 class="anchored" data-anchor-id="build-a-snowman-with-r">Build a snowman with R</h2>
<p>Let’s start with the background. The easiest way to start with a blank canvas in {ggplot2} is to create an empty plot using <code>ggplot()</code> with no arguments. We can also remove all theme elements (such as the grey background and grid lines) with <code>theme_void()</code>. To change the background colour to a dark blue for the night sky, we can edit the <code>plot.background</code> element of the theme using <code>element_rect()</code> (since the background is essentially just a big rectangle).</p>
<p>In {ggplot2} <code>fill</code> is the inner colour of shapes whilst <code>colour</code> is the outline colour. You can specify colours in different ways in R: either via the <code>rgb()</code> function, using a character string for a hex colour such as <code>"#000000"</code>, or using a named colour. If you run <code>colors()</code>, you’ll see all the valid named colours you can use. Here, we’ve picked <code>"midnightblue"</code>.</p>
<p>Let’s save this initial plot as an object <code>s1</code> that we’ll keep adding layers to. Saving plots in different stages of styling as objects can help to keep your code more modular.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">s1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb2-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(</span>
<span id="cb2-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"midnightblue"</span></span>
<span id="cb2-6">      )</span>
<span id="cb2-7">  )</span>
<span id="cb2-8">s1</span></code></pre></div>
<p>Next we’ll add some snow on the ground. We’ll do this by drawing a white rectangle along the bottom of the plot. There are two different functions that we could use to add a rectangle: <code>geom_rect()</code> or <code>annotate()</code>. The difference between the two is that <code>geom_rect()</code> maps columns of a <code>data.frame</code> to different elements of a plot whereas <code>annotate()</code> can take values passed in as vectors. Most of the {ggplot2} graphs you’ll see will use <code>geom_*()</code> functions. However, if you’re only adding one or two elements to a plot then <code>annotate()</code> might be quicker.</p>
<p>Since we’re only adding one rectangle for the snow, it’s easier to use <code>annotate()</code> with the <code>"rect"</code> geometry. This requires four arguments: the minimum and maximum x and y coordinates of the rectangle – essentially specifying where the corners are. We can also change the colour of the rectangle and its outline using the <code>fill</code> and <code>colour</code> arguments. Here, I’ve used a very light grey instead of white.</p>
<p>If we don’t set the axis limits using <code>xlim()</code> and <code>ylim()</code>, the plot area will resize to fit the area of the snow rectangle. The night sky background will disappear. You can choose any axis limits you wish here – but the unit square will make it easier to find the right coordinates when deciding where to position other elements. Finally, we add <code>coord_fixed()</code> to fix the 1:1 aspect ratio and make sure our grid is actually square with <code>expand = FALSE</code> to remove the additional padding at the sides of the plot.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">s2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb3-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>,</span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb3-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb3-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey98"</span>,</span>
<span id="cb3-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey98"</span></span>
<span id="cb3-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb3-12">s2</span></code></pre></div>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/s1.png" class="img-fluid" alt="Dark blue square."></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/s2.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom."></p>
</div>
</div>
</div>
<p>To finish off the background, we’ll add some falling snowflakes. We first need to decide where on the plot the snowflakes will appear. We’ll be plotting lots of snowflakes, so manually typing out the coordinates of where they’ll be would be very inefficient. Instead, we can use functions to generate the locations randomly. For this we’ll use the uniform distribution. The uniform distribution has two parameters – the lower and upper bounds where any values between the bounds are equally likely. You can generate samples from a uniform distribution in R using the <code>runif()</code> function.</p>
<p>When generating random numbers in R (or any other programming language), it’s important to set a seed. This means that if you give your code to someone else, they’ll get the same random numbers as you. Some people choose to use the date as the random seed and since we’re making Christmas cards, we’ll use Christmas day as the random seed – in <code>yyyymmdd</code> format, of course!</p>
<p>We create a variable <code>n</code> specifying how many snowflakes we’ll create. Creating a variable rather than hard coding the variables makes it easier to vary how many snowflakes we want. Since our plot grid goes between 0 and 1 in both the x and y directions, we generate random numbers between 0 and 1 for both the x and y coordinates and store the values in a <code>data.frame</code> called <code>snowflakes</code>.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20231225</span>)</span>
<span id="cb4-2">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb4-3">snowflakes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb4-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-6">)</span></code></pre></div>
<p>Now we can plot the <code>snowflakes</code> data using <code>geom_point()</code> – the same function you’d use for a scatter plot. Since we’re using a <code>geom_*()</code> function, we need to tell {ggplot2} which columns go on the <code>x</code> and <code>y</code> axes inside the <code>aes()</code> function. To plot the snowflakes, we’re going to make using of R’s different point characters. The default when plotting with <code>geom_point()</code> is a small black dot, but we can choose to use a small star (close enough to a snowflake!) by setting <code>pch = 8</code> and changing the <code>colour</code> to <code>"white"</code>.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">s3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb5-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> snowflakes,</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb5-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x,</span>
<span id="cb5-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y</span>
<span id="cb5-7">    ),</span>
<span id="cb5-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb5-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb5-10">  )</span>
<span id="cb5-11">s3</span></code></pre></div>
<p>Now comes the part where we start rolling up some snowballs! Or, in the case of an R snowman, we draw some circles. Unfortunately, there isn’t a built-in <code>geom_*()</code> function in {ggplot2} for plotting circles. We could use <code>geom_point()</code> here and increase the size of the points but this approach can look a little bit <em>fuzzy</em> when the points are very large. Instead, we’ll turn to a {ggplot2} extension package for some additional <code>geom_*</code> functions - {ggforce} <span class="citation" data-cites="ggforce">(Pedersen 2022)</span>.</p>
<p>The <code>geom_circle()</code> function requires at least three elements mapped to the aesthetics inside <code>aes()</code>: the coordinates of the centre of the circle given by <code>x0</code> and <code>y0</code>, and the radii of each of the circles, <code>r</code>. Instead of creating a separate data frame and passing it into <code>geom_circle()</code>, we can alternatively create the data frame inside the function. The <code>fill</code> and <code>colour</code> arguments work as they do in {ggplot2} and we can set both to <code>"white"</code>.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">s4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_circle</span>(</span>
<span id="cb6-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb6-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>),</span>
<span id="cb6-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb6-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb6-7">    ),</span>
<span id="cb6-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> x0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> y0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> r),</span>
<span id="cb6-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span id="cb6-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span></span>
<span id="cb6-11">  )</span>
<span id="cb6-12">s4</span></code></pre></div>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/s3.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars."></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/s4.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre."></p>
</div>
</div>
</div>
<p>We can use <code>geom_point()</code> again to add some more points to represent the buttons and the eyes. Here, we’ll manually specify the coordinates of the points. For the buttons we add them in a vertical line in the middle of the snowman’s body circle, and for the eyes we add them in a horizontal line in the middle of the head circle.</p>
<p>Since no two rocks are exactly the same size, we can add some random variation to the size of the points using <code>runif()</code> again. We generate five different sizes between 2 and 4.5. For reference, the default point size is 1.5. Adding <code>scale_size_identity()</code> means that the sizes of the points are actually equally to the sizes we generated from <code>runif()</code> and removes the legend that is automatically added when we add <code>size</code> inside <code>aes()</code>.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">s5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s4 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb7-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb7-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.57</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.62</span>),</span>
<span id="cb7-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.52</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.52</span>),</span>
<span id="cb7-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span>)</span>
<span id="cb7-7">    ),</span>
<span id="cb7-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> size)</span>
<span id="cb7-9">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size_identity</span>()</span>
<span id="cb7-11">s5</span></code></pre></div>
<p>To add sticks for arms, we can make use of <code>geom_segment()</code> to draw some lines. We could also use <code>geom_path()</code> but that is designed to connect points across multiple cases, whereas <code>geom_segment()</code> draws a single line per row of data – and we don’t want to join the snowman’s arms together!</p>
<p>To use <code>geom_segment()</code> we need to create a data frame containing the x and y coordinates for the start and end of each line, and then pass this into the aesthetic mapping with <code>aes()</code>. We can control the colour and width of the lines using the <code>colour</code> and <code>linewidth</code> arguments. Setting the <code>lineend</code> argument to <code>"round"</code> means that the ends of the lines will be rounded rather than the default straight edge.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">s6 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s5 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(</span>
<span id="cb8-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb8-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.46</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>),</span>
<span id="cb8-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.33</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.85</span>),</span>
<span id="cb8-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb8-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>)</span>
<span id="cb8-8">    ),</span>
<span id="cb8-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mapping =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> xend, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> yend),</span>
<span id="cb8-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chocolate4"</span>,</span>
<span id="cb8-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lineend =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>,</span>
<span id="cb8-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb8-13">  )</span>
<span id="cb8-14">s6</span></code></pre></div>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/s5.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre. Five black dots denote two eyes and three buttons on a snowman."></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/s6.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre. Five black dots denote two eyes and three buttons on a snowman. Two brown lines look like arms."></p>
</div>
</div>
</div>
<p>We’ll now add a (very simple) hat to our snowman, fashioned out of two rectangles. We can add the rectangles as we did before using the <code>annotate()</code> function and specifying the locations of the corners of the rectangles. We start with a shorter wider rectangle for the brim of the hat, and then a taller, narrower rectangle for the crown of the hat. Since we’ll colour them both <code>"brown"</code>, it doesn’t matter if they overlap a little bit.</p>
<p>This <em>might</em> be one of the situations we should have used <code>geom_rect()</code> instead of <code>annotate()</code> but it might take a lot of trial and error to position the hat exactly where we want it, and this seemed a little easier with <code>annotate()</code>.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">s7 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s6 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb9-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>,</span>
<span id="cb9-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.46</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.74</span>,</span>
<span id="cb9-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.55</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.60</span>,</span>
<span id="cb9-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span></span>
<span id="cb9-7">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb9-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>,</span>
<span id="cb9-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.70</span>,</span>
<span id="cb9-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.56</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.73</span>,</span>
<span id="cb9-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span></span>
<span id="cb9-13">  )</span>
<span id="cb9-14">s7</span></code></pre></div>
<p>Now we can move on to the final component of building a snowman – the carrot for his nose! We’re going to use a triangle for the nose. Unfortunately, there are no built-in triangle geoms in {ggplot2} so we’ll have to make our own. There are different ways to do this, but here we’re going to make use of the {sf} package <span class="citation" data-cites="sf">(Pebesma 2018)</span>. The {sf} package (short for <em>simple features</em>) is designed for working with spatial data. Although we’re not working with maps, we can still use {sf} to make shapes – including polygons.</p>
<p>We start by constructing a matrix with two columns – one for x coordinates and one for y. The x coordinates start in the middle of the head and go slightly to the right for the triangle point. The y coordinates take a little bit more trial and error to get right. Note that although triangles only have three corners, we have four rows of points. The last row must be the same as the first to make the polygon <em>closed</em>. The matrix is then converted into a spatial object using the <code>st_polygon()</code> function, and we can check how it looks using <code>plot()</code>.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">nose_pts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(</span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb10-3">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb10-4">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.65</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.48</span>,</span>
<span id="cb10-5">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.46</span>,</span>
<span id="cb10-6">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb10-7">  ),</span>
<span id="cb10-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb10-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb10-10">)</span>
<span id="cb10-11">nose <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_polygon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(nose_pts))</span>
<span id="cb10-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(nose)</span></code></pre></div>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/s7.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre. Five black dots denote two eyes and three buttons on a snowman. Two brown lines look like arms. Two red rectangles form a hat."></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/nose.png" class="img-fluid" alt="Outline of a triangle pointing to the right against a white background."></p>
</div>
</div>
</div>
<p>We can plot <code>sf</code> objects with {ggplot2} using <code>geom_sf()</code>. <code>geom_sf()</code> is a slightly special <code>geom</code> since we don’t need to specify an aesthetic mapping for the <code>x</code> and <code>y</code> axes – they are determined automatically from the <code>sf</code> object along with which type of geometry to draw. If your <code>sf</code> object has points, points will be drawn. If it has country shapes, polygons will be drawn. Like other <code>geom_*()</code> functions, we can change the <code>colour</code> and <code>fill</code> arguments to a different colour – in this case <code>"orange"</code> to represent a carrot!</p>
<p>You should see a <code>Coordinate system already present. Adding new coordinate system, which will replace the existing one.</code> message when you run the following code. The is because <code>geom_sf</code> forces it’s own coordinate system on the plot overriding our previous code specifying <code>coord_fixed()</code>. If you run it without the <code>coord_sf(expand = FALSE)</code>, the extra space around the plot will reappear. We can remove it again with <code>expand = FALSE</code>.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">s8 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s7 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(</span>
<span id="cb11-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> nose,</span>
<span id="cb11-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>,</span>
<span id="cb11-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span></span>
<span id="cb11-6">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb11-8">s8</span></code></pre></div>
<blockquote class="blockquote">
<p>You <em>could</em> skip the <code>sf</code> part of this completely and pass the coordinates directly into <code>geom_polygon()</code> instead. However, I’ve often found it quicker and easier to tinker with polygon shapes using <code>sf</code>.</p>
</blockquote>
<p>A key part of any Christmas card is the message wishing recipients a Merry Christmas! We can add text to our plot using the <code>annotate()</code> function and the <code>"text"</code> geometry (you could instead use <code>geom_text()</code> if you prefer). When adding text, we require at least three arguments: the <code>x</code> and <code>y</code> coordinates of where the text should be added, and the <code>label</code> denoting what text should appear. We can supply additional arguments to <code>annotate()</code> to style the text, such as: <code>colour</code> (which changes the colour of the text); <code>family</code> (to define which font to use); <code>fontface</code> (which determines if the font is bold or italic, for example); and <code>size</code> (which changes the size of the text). The <code>"mono"</code> option for <code>family</code> tells {ggplot2} to use the default system monospace font.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">s9 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> s8 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(</span>
<span id="cb12-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb12-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.07</span>,</span>
<span id="cb12-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Merry Christmas"</span>,</span>
<span id="cb12-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red3"</span>,</span>
<span id="cb12-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mono"</span>,</span>
<span id="cb12-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb12-9">  )</span>
<span id="cb12-10">s9</span></code></pre></div>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/s8.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre. Five black dots denote two eyes and three buttons on a snowman. Two brown lines look like arms. Two red rectangles form a hat. Orange triangle as a nose."></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/s9.png" class="img-fluid" alt="Dark blue square with off-white rectangle at the bottom and small random white stars, and two white circles slightly off centre. Five black dots denote two eyes and three buttons on a snowman. Two brown lines look like arms. Two red rectangles form a hat. Orange triangle as a nose, with text reading Merry Christmas at the bottom."></p>
</div>
</div>
</div>
</section>
<section id="sending-christmas-cards-in-r" class="level2">
<h2 class="anchored" data-anchor-id="sending-christmas-cards-in-r">Sending Christmas cards in R</h2>
<p>Now that we’ve finished creating our Christmas card, we need to think about how to send it. You could save it as an image file using <code>ggsave()</code>, print it out, and send it in the post. Or you could also use R to send it!</p>
<p>There are many different R packages for sending emails from R. If you create a database of email addresses and names, you could personalise the message on the Christmas card and then send it automatically as an email from R. If you want to automate the process of sending physical cards from R, you might be interested in the <a href="https://github.com/jnolis">{ggirl} package</a> from Jacqueline Nolis <span class="citation" data-cites="ggirl">(Nolis 2023)</span>. {ggirl} allows you to send postcards with a <code>ggplot</code> object printed on the front. {ggirl} is also an incredible example of <a href="https://jnolis.com/blog/introducing_ggirl/">an eCommerce platform built with R</a>! Note that {ggirl} can currently only send physical items to addresses in the United States.</p>
</section>
<section id="other-christmas-r-packages" class="level2">
<h2 class="anchored" data-anchor-id="other-christmas-r-packages">Other Christmas R packages</h2>
<p>If you’re curious about making Christmas cards with R but you don’t have the time to make them from scratch, you’ll likely find the <code>christmas</code> R package <span class="citation" data-cites="christmas">(Barrera-Gomez 2022)</span> helpful. This package from Jose Barrera-Gomez can generate lots of different Christmas cards, many of them animated and available in different languages (English, Catalan and Spanish).</p>
<p>Emil Hvitfeldt has also created a <a href="https://quarto.org/">Quarto</a> <a href="https://github.com/EmilHvitfeldt/quarto-snow">extension that gives the effect of falling snowflakes</a> on HTML outputs – including revealjs slides which is perfect for festive presentations!</p>
<p>Have you made your own Christmas cards with R? We’d love to see your designs!</p>
<div class="callout callout-style-simple callout-note" style="margin-top: 2.25rem;">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>Inspired by Nicola’s tutorial, Real World Data Science has indeed made its own Christmas card design. <a href="../../../../../../viewpoints/editors-blog/posts/2023/12/12/rwds-xmas-card.html">Check out our attempt over at the Editors’ Blog</a>!</p>
</div>
</div>
</div>
<div class="article-btn">
<p><a href="../../../../../../ideas/tutorials/index.html">Explore more Tutorials</a></p>
</div>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-12">
<dl>
<dt>About the author</dt>
<dd>
<strong>Nicola Rennie</strong> is a lecturer in health data science in the Centre for Health Informatics, Computing, and Statistics (CHICAS) within Lancaster Medical School at Lancaster University. She’s an R enthusiast, data visualisation aficionado, and generative artist, among other things. Her personal website is hosted at <a href="https://nrennie.github.io/">nrennie.rbind.io</a>, and she is a co-author of the <a href="https://royal-statistical-society.github.io/datavisguide/">Royal Statistical Society’s Best Practices for Data Visualisation</a>.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2023 Nicola Rennie
</dd>
</dl>
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img style="height:22px!important;vertical-align:text-bottom;" src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/https:/mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/https:/mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"></a> This article is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> International licence</a>.</p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
Rennie, Nicola. 2023. “Creating Christmas cards with R.” Real World Data Science, December 12, 2023. <a href="https://realworlddatascience.net/ideas/tutorials/posts/2023/12/12/xmas-cards.html">URL</a>
</dd>
</dl>
</div>
</div>
</div>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-christmas" class="csl-entry">
Barrera-Gomez, Jose. 2022. <em>Christmas: Generation of Different Animated Christmas Cards</em>. <a href="https://CRAN.R-project.org/package=christmas">https://CRAN.R-project.org/package=christmas</a>.
</div>
<div id="ref-ggirl" class="csl-entry">
Nolis, Jacqueline. 2023. <em>Ggirl: Ggplot2 Art in Real Life</em>. <a href="https://github.com/jnolis/ggirl">https://github.com/jnolis/ggirl</a>.
</div>
<div id="ref-sf" class="csl-entry">
Pebesma, Edzer. 2018. <span>“<span class="nocase">Simple Features for R: Standardized Support for Spatial Vector Data</span>.”</span> <em><span>The R Journal</span></em> 10 (1): 439–46. <a href="https://doi.org/10.32614/RJ-2018-009">https://doi.org/10.32614/RJ-2018-009</a>.
</div>
<div id="ref-ggforce" class="csl-entry">
Pedersen, Thomas Lin. 2022. <em>Ggforce: Accelerating ’Ggplot2’</em>. <a href="https://CRAN.R-project.org/package=ggforce">https://CRAN.R-project.org/package=ggforce</a>.
</div>
<div id="ref-R-base" class="csl-entry">
R Core Team. 2022. <em>R: A Language and Environment for Statistical Computing</em>. Vienna, Austria: R Foundation for Statistical Computing. <a href="https://www.R-project.org/">https://www.R-project.org/</a>.
</div>
<div id="ref-ggplot2" class="csl-entry">
Wickham, Hadley. 2016. <em>Ggplot2: Elegant Graphics for Data Analysis</em>. Springer-Verlag New York. <a href="https://ggplot2.tidyverse.org">https://ggplot2.tidyverse.org</a>.
</div>
</div></section></div> ]]></description>
  <category>R</category>
  <category>Data visualisation</category>
  <guid>https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/xmas-cards.html</guid>
  <pubDate>Tue, 12 Dec 2023 00:00:00 GMT</pubDate>
  <media:content url="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/12/12/images/xmas-card.png" medium="image" type="image/png" height="105" width="144"/>
</item>
<item>
  <title>How to ‘open science’: A brief guide to principles and practices</title>
  <dc:creator>Isabel Sassoon</dc:creator>
  <link>https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/11/06/how-to-open-science.html</link>
  <description><![CDATA[ 




<p><a href="https://www.fosteropenscience.eu/learning/what-is-open-science/#/id/5ab8ea32dd1827131b90e3ac">Open science</a> is about making your research freely accessible to others. This includes your data, your code and any outputs (such as reports or articles).</p>
<p>Many people in research, or working or studying in higher education, will be familiar with open science as a concept. As a lecturer, I was aware of it and frequently made use of open data for teaching and research, but it was not until it became a requirement from my funder that I took the opportunity to run my own research as open science by design.</p>
<p>Most tools that I was already familiar with could be used to support open science, but I soon realised that there were some steps and planning that I first needed to learn. As I discovered more about the processes and principles of open science, I came to see that making my research open would not require much additional time and effort. However, I felt that a succinct guide to open science would certainly help me – and others – to make the transition more easily. So, I set out to write such a guide.</p>
<p>This is the result! It is not meant to be an exhaustive document. Rather, I will explain the route I took to open science and what options are out there for others looking to follow suit.</p>
<section id="what-is-open-science" class="level2">
<h2 class="anchored" data-anchor-id="what-is-open-science">What is open science?</h2>
<p>“Open science refers to the process of making the content and process of producing evidence and claims transparent and accessible to others” <span class="citation" data-cites="munafo2017manifesto">(Munafò et al. 2017)</span>. The open science principles are:</p>
<dl>
<dt>Open source</dt>
<dd>
Any data, code or output is accessible and usable in software that is freely available and with an open license. What this means in practice is that, for example, when sharing data, the .csv format is used rather than .xlsx, as the latter requires closed source software (Microsoft Excel) to run.
</dd>
<dt>Open data</dt>
<dd>
Research data should be freely accessible. One approach to open data is to adhere to the FAIR Data Principles <span class="citation" data-cites="wilkinson2016fair">(Wilkinson et al. 2016)</span>. FAIR stands for Findable, Accessible, Interoperable, and Reusable, and these principles can be implemented as a step to help make your work open science. However, they are not the only way, nor are they a guarantee that your work will automatically meet the definition of “open science” if you implement them.
</dd>
<dt>Open access</dt>
<dd>
Access to published papers and/or outputs is freely available to all. This can be achieved, for example, by sharing published papers in a pre-print server.
</dd>
</dl>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
What is a pre-print server?
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>Pre-print servers are online repositories that enable you to share versions of your manuscript before or while your manuscript is under review. Examples of such repositories include <a href="https://arxiv.org/">ArXiv</a> and <a href="https://www.medrxiv.org/">MedRxiv</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/11/06/images/pre-print.png" class="img-fluid figure-img" alt="Screengrab of the MedRxiv page for a paper titled 'Why one size fits all is not enough when designing COVID-19 immunity certificates for domestic use: a UK wide cross-sectional online survey.'"></p>
</figure>
</div>
<div class="figure-caption" style="text-align: center;">
<p>Pre-print server example from MedRxiv.</p>
</div>
</div>
</div>
</div>
<p>One additional benefit of open science is that it supports <a href="https://realworlddatascience.net/case-studies/posts/2023/06/15/road-to-reproducible-research.html">reproducible research</a>. This means that others can download your data and code, re-run the analysis, and see if they obtain the same results. To get the full benefit of open science and promote reproducibility, code needs to be written with enough explanations or comments to help others understand the logic of the various stages of an analysis.</p>
</section>
<section id="steps-to-open-science" class="level2">
<h2 class="anchored" data-anchor-id="steps-to-open-science">Steps to open science</h2>
<p>In this section, I will outline steps you can take to easily make your research open science. There will be situations where it is not possible to make all aspects of research open – for example, due to privacy and consent issues related to data. It is still possible to share some elements of such projects, but potentially this involves additional work – to create suitable demo data, say, or generate synthetic data in order to provide data that has comparable trends but preserves privacy. It may also be possible to share the data when it is requested on a case-by-case basis. I am not going to cover this here, but it is worth considering whether open science is possible in each case.</p>
<section id="before-you-begin" class="level3">
<h3 class="anchored" data-anchor-id="before-you-begin">Before you begin…</h3>
<p>Pre-registering an analysis plan for your research helps establish that your research is confirmatory (hypothesis testing) rather than exploratory (hypothesis generating). If you have some hypotheses or research questions that are the foundation of your research, it is worth pre-registering. If your research is exploratory, pre-registration is not necessarily applicable. Although pre-registration in itself is not a requirement for open science, the process of pre-registration can all be completed within repositories such as the Open Science Framework (OSF). Pre-registering your analysis plan will add value and rigour to you research.</p>
<p>If your research doesn’t require pre-registration, jump straight to Step 1.</p>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
What is pre-registration?
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>Pre-registration involves completing a form before you start your analysis to explain the primary research questions, the covariates of interest, and the methods you plan to use and why. <span class="citation" data-cites="haroz_2022">Haroz (2022)</span> provides more detail on how apps like OSF, Zenodo and Figshare support pre-registration. <a href="https://www.youtube.com/watch?v=_505Oek-wHM">This video</a> also gives more details.</p>
<p>Below is an example of a pre-registration.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/11/06/images/pre-registration.png" class="img-fluid figure-img" alt="Screengrab of a pre-registration document, detailing a research project's hypothesis, study type, and study design."></p>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="step-1" class="level3">
<h3 class="anchored" data-anchor-id="step-1">Step 1</h3>
<p>Does your research plan require you to write a lot of code for analysis purposes, perhaps in collaboration with others? If the answer is <strong>No</strong>, skip to Step 2. If <strong>Yes</strong>:</p>
<ul>
<li>Consider setting up a GitHub repository (or repo), especially if this is a collaborative project and it is likely that more than one person will be working on the code. Don’t forget to invite your collaborators to join the repo!</li>
<li>GitHub repos can be set to private and then made public at the appropriate time, so development work can take place behind closed doors and then released to the wider world when ready.</li>
<li>Ensure that your code is commented properly so that it is reusable and, eventually, your results are reproducible.</li>
</ul>
</section>
<section id="step-2" class="level3">
<h3 class="anchored" data-anchor-id="step-2">Step 2</h3>
<p>GitHub is a great tool for developing code collaboratively, but it may not be right for you – or indeed the only tool to use – if you have a lot of other material to work with and release as part of your research project. If that’s the case:</p>
<ul>
<li><p>Set up an area for your project on an open science repository such as OSF, Zenodo or Figshare. (If you use OSF then setting up an OSF repository is quick and easy – head to <a href="https://osf.io/">osf.io</a>. OSF allows many integrations, including to GitHub, through the use of add-ons.)</p></li>
<li><p>You can start by setting your repository as private and then make it public at the appropriate time.</p></li>
<li><p>Upload all project files, and don’t forget to invite your collaborators.</p></li>
<li><p>Add ORCIDs for every team member.</p></li>
</ul>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-3-contents" aria-controls="callout-3" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
What is an ORCID?
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-3" class="callout-3-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>An ORCID is a persistent digital identifier that you own and control. It allows you to connect your ID with your professional information – affiliations, grants, publications, peer reviews, and more. You can set one up at <a href="https://orcid.org/register">orcid.org</a>.</p>
</div>
</div>
</div>
</section>
<section id="step-3" class="level3">
<h3 class="anchored" data-anchor-id="step-3">Step 3</h3>
<p>If you are ready to submit your research to a journal or conference, consider the following steps before you submit:</p>
<ul>
<li>Check that there is enough information in GitHub (if using) and OSF (if using) about the project. This should include instructions for someone to be able to access your files, use the data and run the code.</li>
<li>Make the GitHub and/or OSF repositories publicly visible.</li>
<li>If submitting to a journal that requires anonymous links, generate them and copy them into the manuscript. (In OSF, for example, it is possible to create anonymous links to your repository in case of double-blind submission requirements.)</li>
<li>Share a copy of your manuscript on a pre-print server – but don’t forget to check the journal or conference policy on pre-prints before you do!</li>
</ul>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Apps and websites to support open science
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>This is by no means a complete list but instead features the apps and websites that are commonly used when research projects include data and code.</p>
<section id="open-science-framework-osf" class="level5">
<h5 class="anchored" data-anchor-id="open-science-framework-osf">Open Science Framework (OSF)</h5>
<p>OSF is a free web app that supports researchers with sharing, archiving, registration and collaboration. The <a href="https://help.osf.io">Open Science Framework website</a> is worth checking out and includes a guide to help users get started. Once a project is public in the OSF it will have a DOI and a permanent link, so it can be cited. OSF can also support the tracking of versions of your file. One drawback can be that there is a limit on the maximum size of file that can be uploaded.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/11/06/images/osf.png" class="img-fluid figure-img" style="width:80.0%" alt="Screengrab of an Open Science Framework repository for a project titled 'Why one size fits all is not enough when designing COVID-19 immunity certificates for domestic use.'"></p>
</figure>
</div>
<div class="figure-caption" style="text-align: center;">
<p>Sample OSF repository.</p>
</div>
</section>
<section id="figshare" class="level5">
<h5 class="anchored" data-anchor-id="figshare">Figshare</h5>
<p>This web app supports storing and sharing research outputs (papers, FAIR data, and non-traditional research outputs). Like OSF, <a href="https://figshare.com">Figshare</a> provides a DOI for your files and is similarly limited in the maximum size of file that can be upload.</p>
</section>
<section id="zenodo" class="level5">
<h5 class="anchored" data-anchor-id="zenodo">Zenodo</h5>
<p>Another general purpose open repository. As with Figshare, <a href="https://zenodo.org">Zenodo</a> also provides a DOI.</p>
</section>
<section id="github" class="level5">
<h5 class="anchored" data-anchor-id="github">GitHub</h5>
<p>GitHub is a web app that offers distributed version control. It is very commonly used for software development, especially when there are multiple developers. Although you can share code and many file types through GitHub, accessing and collaborating on projects can be a daunting experience for those who are not familiar with the way GitHub works. Also, GitHub is not always required as it is possible to share your code through OSF, for example. If you want to know more about using GitHub in support of open science and reproducibility, read <a href="https://realworlddatascience.net/case-studies/posts/2023/06/15/road-to-reproducible-research.html">“The road to reproducible research”</a>.</p>
</section>
</div>
</div>
</div>
</section>
</section>
<section id="example-my-own-route-to-open-science" class="level2">
<h2 class="anchored" data-anchor-id="example-my-own-route-to-open-science">Example: my own route to open science</h2>
<p>In my case, my project did not involve a heavy amount of coding or a large number of researchers, so I opted to use <a href="https://osf.io/jubv6/">OSF</a> to store the ethics approval documents, the survey questions (which drove the data collection), the data in .csv format, and the outputs. I also then linked this to <a href="https://brunel.figshare.com/articles/dataset/Why_one_size_fits_all_is_not_enough_when_designing_COVID-19_immunity_certificates_for_domestic_use_a_UK_wide_cross-sectional_online_survey/16962895">Figshare</a> from my institution and published the article on <a href="https://www.medrxiv.org/content/10.1101/2021.10.12.21264898v2">MedRxiv</a> at the same time as I submitted it to a journal for review. The paper was eventually published in <a href="https://bmjopen.bmj.com/content/12/4/e058317">BMJ Open</a>. The steps I took in this case were sufficient for the work to be recognised as embracing open science principles.</p>
</section>
<section id="plot-your-own-route-to-open-science" class="level2">
<h2 class="anchored" data-anchor-id="plot-your-own-route-to-open-science">Plot your own route to open science</h2>
<div class="cell">
<div class="cell-output-display">
<div>
<div>
<pre class="mermaid mermaid-js">flowchart TD
  D("- Set up GitHub repo
  - Set repo as private
  - Add collaborators")
  F("- Set up an OSF repository
  - Set project as private
  - Add collaborators and their ORCIDs")
  A(Pre-register statistical analysis plan?) -- Yes --&gt; B(Complete pre-registration through, e.g., Open Science Framework) --&gt; C(Does your research involve writing lots of code?) -- Yes --&gt; D --&gt; E(Do you plan to share data and other research material?) -- Yes --&gt; F --&gt; G(Research project is finished and ready to submit to journal or conference)
  A -- No --&gt; C -- No --&gt; E -- No --&gt; G
  G --&gt; H(Have you used repos?) -- Yes --&gt; I(Change repo settings - GitHub and/or OSF - to public) --&gt; J(Does publication permit sharing manuscripts to pre-print servers?) -- Yes --&gt; K(Submit to pre-print server) --&gt; L(Does publication require anonymous link to OSF repo for double-blind review?) -- Yes --&gt; M(Generate anonymous link and add to submission) --&gt; N(Submit your work)
  H -- No --&gt; J -- No --&gt; L -- No --&gt; N
</pre>
</div>
</div>
</div>
</div>
</section>
<section id="in-summary" class="level2">
<h2 class="anchored" data-anchor-id="in-summary">In summary…</h2>
<p>To make your research open science, you need to:</p>
<ul>
<li>Make any data you collect or generate available to download and reuse.</li>
<li>Pre-register your statistical analysis plan.*</li>
<li>Make your code available for download, and document it clearly so others can reuse it.</li>
<li>Make any supporting material and outputs available for download in formats that are open source.</li>
<li>If publishing to a journal or conference, share manuscripts in a pre-print server.*</li>
</ul>
<div class="figure-caption">
<p>* May not be relevant or applicable, depending on the nature of your work.</p>
</div>
<div class="article-btn">
<p><a href="../../../../../ideas/index.html">Explore more data science ideas</a></p>
</div>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-12">
<dl>
<dt>About the author</dt>
<dd>
<p><strong>Isabel Sassoon</strong> is a senior lecturer in computer science and data science at Brunel University London and a member of the <a href="https://realworlddatascience.net/viewpoints/editors-blog/posts/2022/10/18/meet-the-team.html">Real World Data Science editorial board</a>.</p>
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>Copyright and licence</dt>
<dd>
<p>© 2023 Isabel Sassoon</p>
</dd>
</dl>
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/11/06/https:/mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1" style="height:22px!important;vertical-align:text-bottom;"><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/11/06/https:/mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1" style="height:22px!important;margin-left:3px;vertical-align:text-bottom;"></a> This article is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> International licence</a> Thumbnail photo by <a href="https://unsplash.com/@the_photoman?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Basil James</a> on <a href="https://unsplash.com/photos/gray-stainless-steel-padlock-iC4BsZQaREg?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Unsplash</a>.</p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
<p>Sassoon, Isabel. 2023. “How to ‘open science’: A brief guide to principles and practices.” Real World Data Science, November 6, 2023. <a href="https://realworlddatascience.net/ideas/posts/2023/11/06/how-to-open-science.html">URL</a></p>
</dd>
</dl>
</div>
</div>
</div>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-haroz_2022" class="csl-entry">
Haroz, Steve. 2022. <span>“Comparison of Preregistration Platforms.”</span> MetaArXiv. <a href="https://doi.org/10.31222/osf.io/zry2u">https://doi.org/10.31222/osf.io/zry2u</a>.
</div>
<div id="ref-munafo2017manifesto" class="csl-entry">
Munafò, Marcus R., Brian A. Nosek, Dorothy V. M. Bishop, Katherine S. Button, Christopher D. Chambers, Nathalie Percie du Sert, Uri Simonsohn, Eric-Jan Wagenmakers, Jennifer J. Ware, and John Ioannidis. 2017. <span>“A Manifesto for Reproducible Science.”</span> <em>Nature Human Behaviour</em> 1 (1): 1–9.
</div>
<div id="ref-wilkinson2016fair" class="csl-entry">
Wilkinson, Mark D., Michel Dumontier, IJsbrand Jan Aalbersberg, Gabrielle Appleton, Myles Axton, Arie Baak, Niklas Blomberg, et al. 2016. <span>“The FAIR Guiding Principles for Scientific Data Management and Stewardship.”</span> <em>Scientific Data</em> 3 (1): 1–9.
</div>
</div></section></div> ]]></description>
  <category>Open science</category>
  <category>Open source</category>
  <category>Open data</category>
  <category>Reproducible research</category>
  <guid>https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/11/06/how-to-open-science.html</guid>
  <pubDate>Mon, 06 Nov 2023 00:00:00 GMT</pubDate>
  <media:content url="https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/11/06/images/basil-james-iC4BsZQaREg-unsplash.png" medium="image" type="image/png" height="105" width="144"/>
</item>
<item>
  <title>Heading to a conference this summer? Share your learnings here</title>
  <dc:creator>Brian Tarran</dc:creator>
  <link>https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/07/17/dsb-live.html</link>
  <description><![CDATA[ 




<p>Three major events in the statistics and data science calendar are taking place over the next few months, and we want to give the wider community the opportunity to sample some of the exciting ideas being discussed. For that, we need your help!</p>
<p>If you’re a student or early career researcher and you’re attending one or all of the…</p>
<ul>
<li><a href="https://www.isi2023.org/">World Statistics Congress</a></li>
<li><a href="https://ww2.amstat.org/meetings/jsm/2023/">Joint Statistical Meetings</a></li>
<li><a href="https://rss.org.uk/training-events/conference-2023/">Royal Statistical Society International Conference</a></li>
</ul>
<p>…we invite you to write about your favourite paper or session as a “Bites” post.</p>
<p>Bites posts are digestible, engaging, non-technical summaries of research papers and presentations, written for an undergraduate-level audience. The goal is to draw attention to key findings, potential applications, and the wider implications of new ideas and developments in statistics and data science. <a href="https://realworlddatascience.net/contributor-docs/datasciencebites.html">Advice and guidance on how to write a Bites post can be found here</a>, and <a href="https://realworlddatascience.net/ideas/datasciencebites/">example posts can be found on our DataScienceBites page</a>.</p>
<p>For our summer conference coverage, Real World Data Science is partnering with our friends at <a href="https://mathstatbites.org/">MathStatBites</a>. If you write a Bites post and it is accepted for publication, the post will appear on one or both of our sites – depending on the focus of the research you’re writing about.</p>
<p>If you have any questions, please feel free to <a href="https://realworlddatascience.net/contact.html">contact us</a>. Otherwise, safe travels, enjoy the conference(s), and we look forward to hearing from you soon!</p>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-12">
<dl>
<dt>About DataScienceBites</dt>
<dd>
<a href="../../../../../../ideas/datasciencebites/index.html"><strong>DataScienceBites</strong></a> is written by graduate students and early career researchers in data science (and related subjects) at universities throughout the world, as well as industry researchers. We publish digestible, engaging summaries of interesting new pre-print and peer-reviewed publications in the data science space, with the goal of making scientific papers more accessible. Find out how to <a href="../../../../../../contributor-docs/datasciencebites.html">become a contributor</a>.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2023 Royal Statistical Society
</dd>
</dl>
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img style="height:22px!important;vertical-align:text-bottom;" src="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/07/17/https:/mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/07/17/https:/mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"></a> This article is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> International licence</a>. Thumbnail image includes photo by <a href="https://unsplash.com/@productschool?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Product School</a> on <a href="https://unsplash.com/photos/nOvIa_x_tfo?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a>.</p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
Tarran, Brian. 2023. “Heading to a conference this summer? Share your learnings here.” Real World Data Science, July 17, 2023. <a href="https://realworlddatascience.net/news-and-views/datasciencebites/posts/2023/07/17/dsb-live.html">URL</a>
</dd>
</dl>
</div>
</div>
</div>



 ]]></description>
  <category>Content ideas</category>
  <category>Call for contributions</category>
  <category>Events</category>
  <guid>https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/07/17/dsb-live.html</guid>
  <pubDate>Mon, 17 Jul 2023 00:00:00 GMT</pubDate>
  <media:content url="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/07/17/images/dsb-live.png" medium="image" type="image/png" height="105" width="144"/>
</item>
<item>
  <title>Choosing the right forecast</title>
  <dc:creator>Brian King</dc:creator>
  <link>https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/07/13/choosing-right-forecast.html</link>
  <description><![CDATA[ 




<p>Nobel laureate Niels Bohr is famously quoted as saying, “Prediction is very difficult, especially if it’s about the future.” The science (or perhaps the art) of forecasting is no easy task and lends itself to a large amount of uncertainty. For this reason, practitioners interested in prediction have increasingly migrated to probabilistic forecasting, where an entire distribution is given as the forecast instead of a single number, thus fully quantifying the inherent uncertainty. In such a setting, traditional metrics of assessing and comparing predictive performance, such as mean squared error (MSE), are no longer appropriate. Instead, proper scoring rules are utilized to evaluate and rank forecast methods. A scoring rule is a function that takes a predictive distribution along with an observed value and outputs a real number called the score. Such a rule is said to be proper if the expected score is maximized when the predictive distribution is the same as the distribution from which the observation was drawn.</p>
<p>Many proper scoring rules exist, such as the continuous ranked probability score (CRPS) and the logarithmic score. Choosing which rule to use is not necessarily straightforward. Furthermore, forecast methods are often selected not based on a single score, but rather averages of scores from many probabilistic forecasts, which can introduce new challenges affecting how one might rank competing forecasts. In the paper under discussion, <a href="https://projecteuclid.org/journals/statistical-science/volume-38/issue-1/Local-scale-invariance-and-robustness-of-proper-scoring-rules/10.1214/22-STS864.short">Bolin and Wallin</a> define several properties of scoring rules that help clarify how the rules behave when multiple forecast scores are averaged. Additionally, they introduce a new class of proper rules that aims to overcome some of the deficiencies of other common scoring rules.</p>
<div class="callout callout-style-default callout-note callout-titled" style="margin-top: 0rem;">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About the paper
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<p><strong>Title:</strong> Local scale invariance and robustness of proper scoring rules</p>
<p><strong>Author(s) and year:</strong> David Bolin and Jonas Wallin (2023)</p>
<p><strong>Status:</strong> Published in <em>Statistical Science</em>, DOI: <a href="https://projecteuclid.org/journals/statistical-science/volume-38/issue-1/Local-scale-invariance-and-robustness-of-proper-scoring-rules/10.1214/22-STS864.short">10.1214/22-STS864</a>.</p>
</div>
</div>
</div>
<p>The authors argue that situations are often encountered where forecasts are derived and subsequently averaged for observations with different inherent variability. One example might be financial data, such as stock returns, where there are commonly periods with much higher variance (known as volatility in the financial setting). Such processes can be represented using a model known as stochastic volatility, where the variance of observed data evolves randomly over time. Figure 1 plots an example path of the data-generating process under such a model. When data exhibits this varying uncertainty, many proper scoring rules will assign a score whose magnitude changes for those observations with more variability, a characteristic the authors term scale dependence. Some rules will ‘punish’ observations with higher uncertainty, and others may ‘reward’ such observations. Hence, when averaging multiple scores, observations will not be treated symmetrically, which the authors argue can “lead to unintuitive forecast rankings.”</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/07/13/images/fig1.png" class="img-fluid figure-img" alt="Left panel of figure shows a time series of volatility, rendered as a line chart. Right panel shows the resulting observations under a standard stochastic volatility model, in scatter plot form."></p>
</figure>
</div>
<div class="figure-caption" style="text-align: center;">
<p><strong>Figure 1:</strong> Left, a time series of volatility, and right, the resulting observations under a standard stochastic volatility model.</p>
</div>
<p>Thus, an ideal scoring rule will not suffer from scale dependence. The lack of scale dependence is a property that the authors term local scale invariance. The logarithmic score possesses this attribute, but the CRPS and other scoring rules, like the Hyvärinen score, do not. To address this issue, the authors propose a new class of scoring rules which exhibits local scale invariance. Among this class is a scoring rule dubbed the scaled CRPS (SCRPS), which features many of the desirable qualities of the CRPS but overcomes the scale dependence issue.</p>
<p>Of course, if local scale invariance is all that matters, then we could just use the logarithmic score in all scenarios. But there is another issue to consider when averaging forecast scores – the presence of outliers. In many scenarios, we might encounter observations that are very far outside the normal range, and we don’t want our average forecast performance measure to be greatly thrown off if such an oddity is observed. In other words, we want our proper scoring rules to be robust. In their article, Bolin and Wallin formalize the concept of robustness for scoring rules and show that, in many cases, the logarithmic score is not robust. Yet they also prove their proposed class of scaled scoring rules is not generally robust, although they show that the scoring rules can be modified to be robust (a new scoring rule they term robust SCRPS). Under such a modification, however, the scoring rule would no longer be local scale invariant in the strict sense. Indeed, under the proposed definitions of local scale invariance and robustness, finding a scoring rule that can simultaneously satisfy both criteria seems difficult. The authors conjecture that it may even be impossible.</p>
<p>Hence, this paper raises many questions for future consideration but achieves its goal of showing that evaluating probabilistic forecasts by averaging proper scoring rules is not necessarily a simple matter. Different scoring rules will lead to different rankings of forecasting methods, and the underlying properties of each scoring rule must be considered on a case-by-case basis. Although not discussed in this summary, the authors also compare scoring rules in several scenarios and present the theory behind the ideas examined here. For interested readers who want to dig more into these ideas, check out <a href="https://projecteuclid.org/journals/statistical-science/volume-38/issue-1/Local-scale-invariance-and-robustness-of-proper-scoring-rules/10.1214/22-STS864.short">the full paper published in <em>Statistical Science</em></a>.</p>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-6">
<dl>
<dt>About the author</dt>
<dd>
<strong>Brian King</strong> is currently a senior machine learning research engineer at Arm, working on applying machine learning to hardware verification. He recently completed his PhD in statistics at Rice University, where his research focused on Bayesian modeling and forecasting for time series of counts.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>About DataScienceBites</dt>
<dd>
<a href="../../../../../../ideas/datasciencebites/index.html"><strong>DataScienceBites</strong></a> is written by graduate students and early career researchers in data science (and related subjects) at universities throughout the world, as well as industry researchers. We publish digestible, engaging summaries of interesting new pre-print and peer-reviewed publications in the data science space, with the goal of making scientific papers more accessible. Find out how to <a href="../../../../../../contributor-docs/datasciencebites.html">become a contributor</a>.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2023 Brian King
</dd>
</dl>
<p>This post is republished with permission from <a href="https://mathstatbites.org/choosing-the-right-forecast/">MathStatBites</a>. Thumbnail image by <a href="https://unsplash.com/@bdchu614?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Brendan Church</a> on <a href="https://unsplash.com/photos/pKeF6Tt3c08?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a>.</p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
King, Brian. 2023. “Choosing the right forecast.” Real World Data Science, July 13, 2023. <a href="https://realworlddatascience.net/ideas/datasciencebites/posts/2023/07/13/choosing-right-forecast.html">URL</a>
</dd>
</dl>
</div>
</div>
</div>



 ]]></description>
  <category>Forecasting</category>
  <category>Prediction</category>
  <category>Robustness</category>
  <guid>https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/07/13/choosing-right-forecast.html</guid>
  <pubDate>Thu, 13 Jul 2023 00:00:00 GMT</pubDate>
  <media:content url="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/07/13/images/brendan-church-pKeF6Tt3c08-unsplash.png" medium="image" type="image/png" height="105" width="144"/>
</item>
<item>
  <title>Trusted AI: translating AI ethics from theory into practice</title>
  <dc:creator>Maxine Setiawan and Mira Pijselman</dc:creator>
  <link>https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/07/03/trusted-AI.html</link>
  <description><![CDATA[ 




<p>With artificial intelligence (AI) becoming increasingly prevalent across sectors, so too have conversations about AI ethics. AI ethics provides a repeatable and comprehensive way to assess what we should and should not be doing with AI, and sets out how we ought to design, use, and govern AI products in accordance with key principles. Ethical frameworks are essential to derive sustainable value from AI products and services and build trust.</p>
<p>A myriad of AI tools that leverage automated or semi-automated decision-making processes have raised important questions that have become foundational in the AI ethics community, such as ‘What does it mean for an algorithm to be fair?’ As an example, AI tools that are used in recruitment may perpetuate biases arising from historical training data. If a model used to generate a shortlist of applicants has been trained on data from past candidates, say, and those candidates – both successful and unsuccessful – are predominantly men, historical patterns that contain various biases will perpetuate to become algorithmic biases that form the model’s decisions. Thus, the model may algorithmically discriminate against women or gender minorities, as individuals from these groups are not well represented in the training data.</p>
<p>To ensure the safe and responsible use of AI, the focus moving forward needs to be on the operationalisation of AI ethics into the day-to-day development lifecycle. But, what does this look like in practice? And how might you get started as an ethical AI practitioner? In this article, we unpack these questions and give you, the data scientist, a foundation to begin your journey towards trusted AI. Read along to get an overview of key principles that you should be aware of, what they mean, their underlying technical grounding, and what implementation might look like practically.</p>
<section id="ethical-ai-principles" class="level2">
<h2 class="anchored" data-anchor-id="ethical-ai-principles">Ethical AI principles</h2>
<p>You have likely heard of several principles in relation to ethical AI, such as fairness or transparency. The context in which you’ve encountered such principles is most probably due to their inclusion in a broader ethical framework. Some of the most popular ethical AI frameworks include the <a href="https://www.nist.gov/itl/ai-risk-management-framework">National Institute of Standards and Technology’s AI Risk Management Framework</a>, the <a href="https://www.gov.uk/government/publications/data-ethics-framework/data-ethics-framework-2020">UK Data Ethics Framework</a>, and the <a href="https://digital-strategy.ec.europa.eu/en/library/ethics-guidelines-trustworthy-ai">European Commission’s Ethics Guidelines for Trustworthy AI</a>. Among these and many other frameworks, we can run into what <a href="https://dx.doi.org/10.2139/ssrn.3831321">Floridi and Cowls (2019)</a> call “principle proliferation,” whereby it becomes overwhelming for those contributing to AI programmes to know where to begin with ethics due to an excess of choice (p.&nbsp;2).</p>
<p>At the time of writing, there is no single universally accepted standard that dictates which essential ethical AI values or principles should be adhered to during AI development and deployment. However, there are common themes that emerge. In our organisation, EY, we’ve learned from the variety of principles, frameworks, and white papers in the AI ethics community and developed our own Trusted AI Framework comprising five key attributes that we believe assure the trustworthiness of AI:</p>
<ul>
<li>Transparent</li>
<li>Explainable</li>
<li>Unbiased</li>
<li>Resilient</li>
<li>High-performing</li>
</ul>
<p>In this article, we take a deeper dive into the first three attributes – transparency, explainability, and unbiasedness (or fairness). These are areas where data scientists can act as critical enablers of ethical AI when they have the right knowledge and toolkits at their disposal.</p>
<section id="transparency" class="level3">
<h3 class="anchored" data-anchor-id="transparency">Transparency</h3>
<p>Transparency is the ability to provide meaningful information to foster awareness and understanding of an AI system. It starts with documenting AI systems in a way that is accessible for a broad audience with a spectrum of technical abilities. It is a simple yet powerful way to build trust in AI. It empowers non-technical stakeholders to critically evaluate AI development decisions, thereby unlocking multi-disciplinary insights that can mitigate reputational or performance risks. Further, it also builds trust with society, as it can enable everyday users to interrogate AI design decisions, product capabilities, and system limitations, thereby permitting users to make informed judgements about technology. Unfortunately, transparency is often misunderstood as disclosing trade secrets or proprietary information, such as source code and datasets. However, transparency can be achieved without disclosing such technically complex information. Instead, it can be as simple as disclosing where and when an AI system is being used, or for what purposes a model should be employed.</p>
<p>But what exactly does “documenting AI systems” look like? Documentation should consist of a mix of technical components (system architecture, dataset selection determination, model selection techniques, etc.) and non-technical components (business case, product purpose of use, alignment to overall AI strategy, etc.). The research community has recommended AI documentation standards, such as <a href="https://arxiv.org/pdf/1803.09010.pdf">datasheets for datasets</a> and <a href="https://arxiv.org/pdf/1810.03993.pdf">model cards for model reporting</a>. You can liken datasheets or model cards to the importance placed upon commenting your code – the more information there is available around decisions throughout model development, the greater the certainty that these artefacts will be understood and used as intended moving forward. Proper documentation and governance will help ensure accountability, improve internal and external oversight, and initiate discussions around model optimisation goals and their trade-offs, such as including fairness and accuracy in optimisation objectives.</p>
<p>With upcoming AI regulations, transparency requirements will become more integral. For example, the <a href="https://artificialintelligenceact.eu/">European Union (EU) AI Act</a> introduces specific transparency obligations, such as bot disclosures, for both users and providers of AI systems, which would allow users to opt out of interacting with an AI system. Furthermore, in higher risk use cases, specific technical documentation is needed, which would include details of a system’s intended purpose and descriptions of its development process.</p>
</section>
<section id="explainability" class="level3">
<h3 class="anchored" data-anchor-id="explainability">Explainability</h3>
<p>Once transparency is enabled, explainability is a natural next step, especially when an AI product is implemented in a more regulated or high-risk environment. Explainability is the ability to express why an AI system reached a particular decision or understand the features that affect model behaviour. Explainability is a key concern within the field of explainable AI, which, as a discipline, strives to improve trustworthiness by enabling a better understanding of a system’s underlying logic via a suite of technical methods.</p>
<p>Fundamentally, different model architectures mean that some models are more interpretable than others, as the steps used to evaluate their predictions are easier for humans to comprehend. Decision trees, for example, have more human-interpretable characteristics than deep learning models. Different model architectures also mean that there are interpretation tools that are only applicable to certain models, such as regression weights in a linear model.</p>
<p>Another approach to consider, then, is model-agnostic interpretation, which encompasses both global interpretability (explanation of an entire model’s behaviour) and local interpretability (explanation of a single prediction). While there are fast-developing techniques and tools for model-agnostic interpretability, let’s take a look at two of the more popular methods available:</p>
<ul>
<li><dl>
<dt><a href="https://dl.acm.org/doi/10.1145/2939672.2939778">Local interpretable model-agnostic explanations (LIME)</a></dt>
<dd>
This is an explanation technique that trains local surrogate models, using explainable models such as Lasso or decision trees, to approximate the predictions of a model that is not interpretable by design in order to explain individual model predictions. The idea is to use interpretable features from the surrogate models to create human-friendly explanations where the underlying model cannot. For example, in an image classification model that detects a flower in an image, LIME is able to highlight the parts of the image that explain why the model classifies the image as a flower (see illustration below). This provides an interpretable explanation between the input variable and prediction, which is an essential part of interpretability.
</dd>
</dl></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/lime.png"><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/07/03/images/lime.png" class="img-fluid figure-img" alt="Illustration of explainable AI processes using LIME on an image classification AI system. In this example, an image classification system receives an image of a sunflower and classifies it as a flower with 70% likelihood. The LIME approach then sees parts of the input image perturbed, or masked, leading to different classification likelihoods from the AI system. From this, a model is able to determine the parts of the input image that best explain the initial classification of 'flower'."></a></p>
<figcaption class="figure-caption">Illustration of explainable AI processes using LIME on an image classification AI system. Adapted from “Local Interpretable Model-Agnostic Explanations (LIME): An Introduction” and <a href="https://www.oreilly.com/content/introduction-to-local-interpretable-model-agnostic-explanations-lime/">O’Reilly</a>.</figcaption>
</figure>
</div>
<ul>
<li><dl>
<dt><a href="https://papers.nips.cc/paper/2017/hash/8a20a8621978632d76c43dfd28b67767-Abstract.html">Shapley Additive Explanations (SHAP)</a></dt>
<dd>
SHAP (<a href="https://github.com/slundberg/shap">GitHub repo</a>) uses tools and theoretical foundations from game theory, one of which is Shapley values. It works by assigning each feature an importance value for a particular prediction to numerically explain the contribution of various features to a model’s output. For example, in a model that predicts flu, SHAP calculates the importance of sneezing as a feature by removing and adding the subset of other features, leading to different combinations of features that contribute to the prediction. This method provides interpretable solutions for more complex models similar to the equivalent of “weights” in linear models.
</dd>
</dl></li>
</ul>
</section>
<section id="fairness" class="level3">
<h3 class="anchored" data-anchor-id="fairness">Fairness</h3>
<p>The area of AI ethics that is central to impending AI regulations, such as the EU AI Act and the New York City AI Law,<sup>1</sup> is fairness. AI models are inherently biased because of their underlying training data.<sup>2</sup> Thus, when we speak of fairness in the context of AI ethics, we are referring to a combination of technical and non-technical ways to minimise the impacts of algorithmic bias.</p>
<p>Let’s begin with the technical approaches to fairness. To achieve equitable, reliable, and fair decisions, a diverse and balanced set of examples is needed in training datasets. However, data often contains disparities that, if left unchecked, can perpetuate algorithmic biases and harms. There are various approaches to detect sources of bias, guarantee fairness, or “debias” models. To strive for algorithmic fairness, many papers have proposed various quantitative measures of fairness, with some based on unstated assumptions about fairness in society. Unfortunately, <a href="https://arxiv.org/pdf/1609.07236.pdf">these assumptions are often mutually incompatible</a>, making it difficult to compare fairness metrics to one another – consider, for example, the longstanding debate between equality of outcome and equality of treatment.</p>
<p>Although metrics incompatibilities exist, fairness broadly focuses on equality of opportunity (group fairness), and equality of outcome (individual fairness) to prevent discrimination against certain attributes. Drawing definitions from legal frameworks, the term “protected attribute” refers to the characteristics that are often protected under anti-discrimination laws, such as gender or race. Mathematically, the following metrics are often used to demonstrate scores that support fairness:</p>
<ul>
<li><dl>
<dt>Statistical parity</dt>
<dd>
This measure seeks to uncover whether a model is fair towards protected attributes by measuring the difference between the majority and protected class in receiving a favourable outcome. A value of 0 demonstrates the model to be fair.
</dd>
</dl></li>
<li><dl>
<dt>Disparate impact</dt>
<dd>
This compares the percentage of favourable outcomes for the monitored group to the percentage of favourable outcomes for a reference group. The groups compared can be the majority group and minority group, and this score will highlight in whose direction decisions are biased. For example, if a model grants loans to 60% of people in a middle-aged group and only 50% for those of other age cohorts, then the disparate impact is 0.8, which indicates a positive bias towards the middle-aged group and an adverse impact on the remaining cohorts.
</dd>
</dl></li>
<li><dl>
<dt>Equality of odds</dt>
<dd>
This measures the balance of the true positive rate and false positive rate between protected and unprotected groups, which seeks to uncover whether a model performs similarly for the two groups.
</dd>
</dl></li>
</ul>
<p>It is important to remember that statistics are only one side of the fairness problem for machine learning, and one that treats the symptoms of bias as opposed to the underlying causes. In addition to the aforementioned technical approaches, there are a variety of non-technical measures that teams developing AI systems can adopt to augment fairness and inclusion:</p>
<ul>
<li><dl>
<dt>Definition of fairness</dt>
<dd>
Organisations that develop or use AI systems need to define, practically, what it means to be fair. Although there are various quantitative fairness measures, these are based on assumptions of fairness in society, which could be defined for each specific use case.
</dd>
</dl></li>
<li><dl>
<dt>Diversity on teams</dt>
<dd>
There’s been a sharpened focus on the value of team diversity to areas such as productivity and creativity. The same is true for ethics. Ensuring that product teams are composed of a broad cross-section of identities can help to organically drive fairness through diversity of thought and experience.
</dd>
</dl></li>
<li><dl>
<dt>Education and self-reflection</dt>
<dd>
Developing knowledge within individuals and teams about the socio-technical aspects of AI – that is, the ways in which AI shapes our social, political, economic, and environmental lives. The more critical a person can be as a data scientist in questioning why something is being built, the more likely they are to proactively recognise risks surrounding fairness.
</dd>
</dl></li>
<li><dl>
<dt>Consider the end user</dt>
<dd>
Imagine that you are on a development team building an AI solution for a problem in the agricultural sector pertaining to livestock health. Who is best suited to solving the problem: a data scientist or a farmer? As a data scientist, you may have the tools to develop a solution, but given your distance from the end user, you are unlikely to intimately understand the problem in the same way a farmer would. If you cannot understand the problem, you cannot hope to find a solution, much less an ethical one. Recognising the importance of consulting individuals that are representative of end users is key to ensure that your design is fair.
</dd>
</dl></li>
<li><dl>
<dt>AI ethics review boards</dt>
<dd>
Data science teams should not operate in isolation. Increasingly, organisations are establishing AI ethics review boards or similar forums that are intended to act as checks on the design decisions made throughout AI development. Does your organisation have one?
</dd>
</dl></li>
</ul>
</section>
</section>
<section id="in-conclusion" class="level2">
<h2 class="anchored" data-anchor-id="in-conclusion">In conclusion</h2>
<p>These three areas – transparency, explainability, and fairness – are the starting points to embed and operationalise AI ethics in technical development. Transparency relies on both technical and non-technical documentation to facilitate discussions with non-technical stakeholders, as well as to create and enforce accountabilities. Explainability helps to build trust in AI output by vesting us with an ability to explain “why”. Finally, adopting both technical and non-technical measures of fairness can ensure that AI products in development do not adversely impact certain groups.</p>
<p>In addition to these three areas of AI ethics, within EY we have two other focus areas – resilience and high-performance – that form part of our Trusted AI Framework. We will discuss these in a future article. We’re also keen to explore topics such as generating trust in generative AI! Until then, please share your stories of developing ethical AI projects in the comments below. How are you translating AI ethics from theory into practice?</p>
<div class="callout callout-style-simple callout-note callout-titled" style="margin-top: 2.25rem;">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Further reading
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>For further technical reading, we suggest:</p>
<ul>
<li><a href="https://christophm.github.io/interpretable-ml-book/">Interpretable Machine Learning</a>, by Christoph Molnar</li>
<li><a href="https://fairmlbook.org/">Fairness and Machine Learning</a>, by Solon Barocas, Moritz Hardt, and Arvind Narayanan</li>
</ul>
<p>For further socio-technical reading on AI and data ethics, we suggest:</p>
<ul>
<li><em>The Age of Surveillance Capitalism</em>, by Shoshana Zuboff</li>
<li><em>Invisible Women</em>, by Caroline Criado Pérez</li>
<li><em>Race after Technology</em>, by Ruha Benjamin</li>
<li><em>Algorithms of Oppression</em>, by Safiya Noble</li>
<li><em>Atlas of AI</em>, by Kate Crawford</li>
<li><em>Weapons of Math Destruction</em>, by Cathy O’Neil</li>
<li><em>Data Feminism</em>, by Catherine D’Ignazio and Lauren Klein</li>
</ul>
</div>
</div>
</div>
<div class="article-btn">
<p><a href="../../../../../ideas/index.html">Explore more data science ideas</a></p>
</div>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-12">
<dl>
<dt>About the authors</dt>
<dd>
<a href="https://www.ey.com/en_uk/people/maxine-setiawan">Maxine Setiawan</a> is a social data scientist specialising in trusted AI, and AI and data risk in EY UK&amp;I. With her multi-disciplinary background, she works to help clients understand and manage risks from their data and AI systems, and to ensure AI governance that is fair, accountable, and trustworthy. Maxine holds an MSc in social data science from the University of Oxford.
</dd>
<dd>
<p><a href="https://www.ey.com/en_uk/people/mira-pijselman">Mira Pijselman</a> is the digital ethics lead for EY UK&amp;I, where she focuses on the responsible governance of key emerging technologies, including artificial intelligence, quantum technologies, and the metaverse. A social scientist and philosopher by training, she helps clients to map, understand, secure, and capitalise on their data and technology potential safely. Mira holds an MSc in the social science of the internet from the University of Oxford.</p>
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2023 Maxine Setiawan and Mira Pijselman
</dd>
</dl>
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img style="height:22px!important;vertical-align:text-bottom;" src="https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/07/03/https:/mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/07/03/https:/mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"></a> This article is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> International licence</a>.</p>
<p>Thumbnail image by <a href="https://www.burg-halle.de/en/xlab">Alexa Steinbrück</a> / <a href="https://www.betterimagesofai.org">Better Images of AI</a> / Explainable AI / <a href="https://creativecommons.org/licenses/by/4.0/">Licenced by CC-BY 4.0</a>.</p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
Setiawan, Maxine and Mira Pijselman. 2023. “Trusted AI: translating AI ethics from theory into practice.” Real World Data Science, July 3, 2023. <a href="https://realworlddatascience.net/ideas/posts/2023/07/03/trusted-AI.html">URL</a>
</dd>
</dl>
</div>
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>New York City Local Law 144.↩︎</p></li>
<li id="fn2"><p>Not statistical bias (usually known as bias-variance trade-off), which compares the training data and target value to approximate errors.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>AI ethics</category>
  <category>Principles</category>
  <category>Regulation</category>
  <guid>https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/07/03/trusted-AI.html</guid>
  <pubDate>Mon, 03 Jul 2023 00:00:00 GMT</pubDate>
  <media:content url="https://michaeldmiles.github.io/michaels-data-blog/ideas/posts/2023/07/03/images/explainable-AI.png" medium="image" type="image/png" height="102" width="144"/>
</item>
<item>
  <title>A demonstration of the law of the flowering plants</title>
  <dc:creator>Jonathan Auerbach</dc:creator>
  <link>https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/flowers.html</link>
  <description><![CDATA[ 




<p>This tutorial will demonstrate a popular method for predicting the day a flower will bloom. There are many reasons why you might want to predict a bloom date. You might be a scientist studying ecosystems stressed by climate change. Or you might be planning a trip to Amsterdam and would like to time your stay to when the tulips are in bloom. Or maybe you are participating in the annual <a href="https://competition.statistics.gmu.edu/">Cherry Blossom Prediction Competition</a> and want some ideas to help you get started.</p>
<p>In any case, you might be surprised to learn that the day a flower blooms is one of the earliest phenomena studied with systematic data collection and analysis. The mathematical rule developed in the eighteenth century to make these predictions – now called the “law of the flowering plants” – shaped the direction of statistics as a field and is still used by scientists with relatively few changes.</p>
<p>We present the law of the flowering plants as it was stated by Adolphe Quetelet, an influential nineteenth century statistician. Upon completing this tutorial, you will be able to:</p>
<ol type="1">
<li>State the law of the flowering plants and explain how Quetelet derived it.</li>
<li>Reproduce Quetelet’s findings with weather data from the Global Historical Climatology Network.</li>
<li>Replicate Quetelet’s findings with more recent data from the USA National Phenology Network.</li>
<li>Predict the day the lilac will bloom in Brussels in 2023 with weather forecasts from AccuWeather.</li>
<li>Describe how the USA National Phenology Network uses the bloom dates of lilacs to monitor the start of spring.</li>
</ol>
<p>At the end of the tutorial, we challenge you to design an algorithm that beats our predictions. The tutorial uses the <code>R</code> programming language. In particular, the code relies on the following packages:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb1-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"knitr"</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kableExtra"</span>)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidyverse"</span>)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plotly"</span>)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rnoaa"</span>)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rnpn"</span>)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rvest"</span>)</span>
<span id="cb1-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<section id="the-law-of-the-flowering-plants" class="level2">
<h2 class="anchored" data-anchor-id="the-law-of-the-flowering-plants">The law of the flowering plants</h2>
<p>We begin by reviewing the law of the flowering plants as it was stated by Adolphe Quetelet. You may already know Quetelet as the inventor of the body mass index. Less known is that Quetelet recorded the bloom dates of hundreds of different plants between 1833 and 1852 at the Brussels Observatory, which he founded and directed. Quetelet reported that a plant flowers when exposed to a specific quantity of heat, measured in degrees of Celsius squared (°C²). For example, he calculated that a lilac blooms when the sum of the daily temperatures squared exceeds 4264°C² following the last frost.</p>
<p>He communicated this law in his <em>Letters addressed to HRH the grand duke of Saxe-Coburg and Gotha</em> <span class="citation" data-cites="quetelet1846lettres quetelet_1849">(Number 33, 1846; translated 1849)</span> and in his reporting <em>On the climate of Belgium</em> <span class="citation" data-cites="observatoire1834annales quetelet_1857">(Chapter 4, Part 4, 1848; data updated in Part 7, 1857)</span>. A picture of Quetelet and the title page of <em>On the climate of Belgium</em> are displayed in Figure 1.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-figure quarto-figure-center" style="flex-basis: 50.0%;justify-content: center;">
<figure class="figure">
<p><a href="images/quetelet_1875400.jpg" class="lightbox" data-description="Source:

<a
href=&quot;https://en.wikipedia.org/wiki/Adolphe_Quetelet#/media/File:Adolphe_Qu%C3%A9telet_by_Joseph-Arnold_Demannez.jpg&quot;>Wikimedia
Commons</a>" data-gallery="Quetelet" title="Portrait of Adolphe Quetelet."><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/quetelet_1875400.jpg" class="img-fluid figure-img" alt="Portrait of Adolphe Quetelet."></a></p>
</figure>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 50.0%;justify-content: center;">
<figure class="figure">
<p><a href="images/sur_le_climat400.jpeg" class="lightbox" data-description="Source:

<a href=&quot;https://gallica.bnf.fr/ark:/12148/bpt6k95028d&quot;>Gallica</a>" data-gallery="Quetelet" title="Title page of Adolphe Quetelet's 'On the climate of Belgium'."><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/sur_le_climat400.jpeg" class="img-fluid figure-img" alt="Title page of Adolphe Quetelet's 'On the climate of Belgium'."></a></p>
</figure>
</div>
</div>
</div>
<div class="figure-caption">
<p><strong>Figure 1:</strong> Quetelet reported on the law of the flowering plants in <em>On the climate of Belgium</em> (1857). Sources: <a href="https://en.wikipedia.org/wiki/Adolphe_Quetelet#/media/File:Adolphe_Qu%C3%A9telet_by_Joseph-Arnold_Demannez.jpg">Wikimedia Commons</a>, <a href="https://gallica.bnf.fr/ark:/12148/bpt6k95028d">Gallica</a>.</p>
</div>
<p>Quetelet was not the first to study bloom dates. Anthophiles have recorded the dates that flowers bloom for centuries. Written records of cherry trees go back as far as 812 AD in Japan and peach and plum trees as far as 1308 AD in China. Systematic record keeping began a century before Quetelet with Robert Marsham’s <em>Indications of Spring</em> <span class="citation" data-cites="marsham_1789">(1789)</span>.</p>
<p>Quetelet was also not the first to study the relationship between temperature and bloom dates. René Réaumur <span class="citation" data-cites="deréaumur_1735">(1735)</span>, an early adopter of the thermometer, noted the relationship before Marsham published his <em>Indications</em>. But Quetelet was the first to systematically study the relationship across a wide variety of plants and derive the amount of heat needed to bloom. An example of Quetelet’s careful record keeping can be seen in Figure 2, one of many tables he reported in his publications.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/quetelet_bloom.png" class="lightbox" data-description="Source:

<a href=&quot;https://gallica.bnf.fr/ark:/12148/bpt6k95028d&quot;>Gallica</a>" data-gallery="quarto-lightbox-gallery-3" title="A table of bloom dates at Brussels Observatory observed by Quetelet between 1839 and 1852."><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/quetelet_bloom.png" class="img-fluid figure-img" alt="A table of bloom dates at Brussels Observatory observed by Quetelet between 1839 and 1852." width="600"></a></p>
</figure>
</div>
<div class="figure-caption">
<p><strong>Figure 2:</strong> Bloom dates at Brussels Observatory observed by Quetelet between 1839 and 1852. Source: <a href="https://gallica.bnf.fr/ark:/12148/bpt6k95028d">Gallica</a>.</p>
</div>
</section>
<section id="reproducing-quetelets-law-of-the-flowering-plants" class="level2">
<h2 class="anchored" data-anchor-id="reproducing-quetelets-law-of-the-flowering-plants">Reproducing Quetelet’s law of the flowering plants</h2>
<p>To reproduce Quetelet’s law, we combine the data in Figure 2 with additional observations from his <em>Letters</em>. We focus on Quetelet’s primary example, the bloom date of the common lilac, <em>Syringa vulgaris</em>, row 18 of Figure 2. We do this because Quetelet carefully describes his methodology for measuring the bloom date of lilacs. For example, Quetelet considers a lilac to have bloomed when “the first corolla opens and shows the stamina.” That event is closest to what the USA Phenology Network describes as “open flowers”, depicted in the center image of Figure 3 below. This detail will become relevant when we attempt to replicate Quetelet’s law in a later section. Note that although we focus on lilacs in this tutorial, the <code>R</code> code is easily edited to predict the day that other plants will bloom.</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-figure quarto-figure-center" style="flex-basis: 33.3%;justify-content: center;">
<figure class="figure">
<p><a href="images/buds250.jpg" class="lightbox" data-description="Source:

<a href=&quot;https://www.usanpn.org/nn/TrackaLilac&quot;>USA National Phenology
Network</a>" data-gallery="flowers" title="Photo of lilac flower buds."><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/buds250.jpg" class="img-fluid figure-img" alt="Photo of lilac flower buds."></a></p>
</figure>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 33.3%;justify-content: center;">
<figure class="figure">
<p><a href="images/open_flowers250.jpg" class="lightbox" data-description="Source:

<a href=&quot;https://www.usanpn.org/nn/TrackaLilac&quot;>USA National Phenology
Network</a>" data-gallery="flowers" title="Photo of open lilac flowers."><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/open_flowers250.jpg" class="img-fluid figure-img" alt="Photo of open lilac flowers."></a></p>
</figure>
</div>
<div class="quarto-figure quarto-figure-center" style="flex-basis: 33.3%;justify-content: center;">
<figure class="figure">
<p><a href="images/full_flowers250.jpg" class="lightbox" data-description="Source:

<a href=&quot;https://www.usanpn.org/nn/TrackaLilac&quot;>USA National Phenology
Network</a>" data-gallery="flowers" title="Photo of full lilac flowers."><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/full_flowers250.jpg" class="img-fluid figure-img" alt="Photo of full lilac flowers."></a></p>
</figure>
</div>
</div>
</div>
<div class="figure-caption">
<p><strong>Figure 3:</strong> The bloom date occurs when the first corolla opens and shows the stamina (center image). Source: <a href="https://www.usanpn.org/nn/TrackaLilac">USA National Phenology Network</a>.</p>
</div>
<p>In the <code>R</code> code below, the five-column tibble <code>lilac</code> contains the date each year that Quetelet observed the lilacs bloom at Brussels Observatory. The first three columns are the month, day, and year the lilacs bloomed between 1839 and 1852. These columns are combined to form the fourth column, the full date the lilacs bloomed. The last column converts the date to the day of the year the lilacs bloomed, abbreviated “doy.” That is, “doy” is the number of days it took for the lilacs bloom following January 1. Both “date” and “doy” representations of Quetelet’s observations will be useful throughout this tutorial.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb2-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb2-2">lilac <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>                   </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"May"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"April"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"April"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"April"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"April"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"April"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"May"</span>, </span>
<span id="cb2-4">                   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"April"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"May"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"April"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"May"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"April"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"May"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"May"</span>),</span>
<span id="cb2-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day   =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb2-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year  =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1839</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1852</span>,</span>
<span id="cb2-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(month, day, year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%B %d %Y"</span>),</span>
<span id="cb2-8">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">doy   =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%j"</span>))) </span>
<span id="cb2-9"></span>
<span id="cb2-10">lilac <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb2-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 1: Bloom dates of lilacs observed by Quetelet between 1839 and 1852."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scroll_box</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100%"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"400px"</span>)</span>
<span id="cb2-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table1">
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto;">
<caption>
<b>Table 1:</b> Bloom dates of lilacs observed by Quetelet between 1839 and 1852.
</caption>
<thead>
<tr>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
month
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
day
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
year
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
date
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
doy
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
10
</td>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-05-10
</td>
<td style="text-align:center;">
130
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
28
</td>
<td style="text-align:center;">
1840
</td>
<td style="text-align:center;">
1840-04-28
</td>
<td style="text-align:center;">
119
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
24
</td>
<td style="text-align:center;">
1841
</td>
<td style="text-align:center;">
1841-04-24
</td>
<td style="text-align:center;">
114
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
28
</td>
<td style="text-align:center;">
1842
</td>
<td style="text-align:center;">
1842-04-28
</td>
<td style="text-align:center;">
118
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
20
</td>
<td style="text-align:center;">
1843
</td>
<td style="text-align:center;">
1843-04-20
</td>
<td style="text-align:center;">
110
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
25
</td>
<td style="text-align:center;">
1844
</td>
<td style="text-align:center;">
1844-04-25
</td>
<td style="text-align:center;">
116
</td>
</tr>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
13
</td>
<td style="text-align:center;">
1845
</td>
<td style="text-align:center;">
1845-05-13
</td>
<td style="text-align:center;">
133
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
1846
</td>
<td style="text-align:center;">
1846-04-12
</td>
<td style="text-align:center;">
102
</td>
</tr>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
9
</td>
<td style="text-align:center;">
1847
</td>
<td style="text-align:center;">
1847-05-09
</td>
<td style="text-align:center;">
129
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
21
</td>
<td style="text-align:center;">
1848
</td>
<td style="text-align:center;">
1848-04-21
</td>
<td style="text-align:center;">
112
</td>
</tr>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
2
</td>
<td style="text-align:center;">
1849
</td>
<td style="text-align:center;">
1849-05-02
</td>
<td style="text-align:center;">
122
</td>
</tr>
<tr>
<td style="text-align:center;">
April
</td>
<td style="text-align:center;">
30
</td>
<td style="text-align:center;">
1850
</td>
<td style="text-align:center;">
1850-04-30
</td>
<td style="text-align:center;">
120
</td>
</tr>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
1
</td>
<td style="text-align:center;">
1851
</td>
<td style="text-align:center;">
1851-05-01
</td>
<td style="text-align:center;">
121
</td>
</tr>
<tr>
<td style="text-align:center;">
May
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
1852
</td>
<td style="text-align:center;">
1852-05-12
</td>
<td style="text-align:center;">
133
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>To reproduce Quetelet’s law of the flowering plants, we will combine these bloom dates with daily temperature. The daily maximum and minimum temperatures at Brussels Observatory between 1839 and 1852 are available from the Global Historical Climatology Network. The data can be downloaded using the <code>ghcnd_search</code> function contained within the <code>R</code> package <code>rnoaa</code> <span class="citation" data-cites="chamberlain_2021">(2021)</span>. The station id for Brussels Observatory is “BE000006447”.</p>
<p>The <code>ghcnd_search</code> function returns the maximum and minimum temperature as separate tibbles in a list. In the <code>R</code> code below, we join the tibbles using the <code>reduce</code> function. Note that the temperature is reported in tenths of a degree (i.e.&nbsp;0.1°C) so we divide by 10 before calculating the temperature midrange, our estimate of the daily temperature.</p>
<p>The result is a five-column tibble <code>temp</code>, which contains the year of the temperature record (“year”), the date of the temperature record (“date”), the maximum temperature (“tmax”), the minimum temperature (“tmin”), and the midrange temperature (“temp”). The first 10 rows of the table are below. When you produce the full table yourself, you may notice that a small portion of temperature records are missing. We found that imputing these missing values does not significantly change the results. Therefore, we ignore these days when conducting our analysis.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb3-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb3-2">temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ghcnd_search</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stationid =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BE000006447"</span>,</span>
<span id="cb3-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmax"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmin"</span>),</span>
<span id="cb3-5">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_min =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1839-01-01"</span>,</span>
<span id="cb3-6">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_max =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1852-12-31"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reduce</span>(left_join) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transmute</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y"</span>)), </span>
<span id="cb3-9">            date, </span>
<span id="cb3-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmax =</span> tmax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, </span>
<span id="cb3-11">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmin =</span> tmin <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, </span>
<span id="cb3-12">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> (tmax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tmin) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-13">  </span>
<span id="cb3-14">temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, </span>
<span id="cb3-16">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maximum temperature (°C)"</span>, </span>
<span id="cb3-17">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minimum temperature (°C)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"midrange temperature (°C)"</span>),</span>
<span id="cb3-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 2: Temperature observed at Brussels Observatory between 1839 and 1852."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scroll_box</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100%"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"400px"</span>)</span>
<span id="cb3-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table2">
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto;">
<caption>
<b>Table 2:</b> Temperature observed at Brussels Observatory between 1839 and 1852.
</caption>
<thead>
<tr>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
year
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
date
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
maximum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
minimum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
midrange temperature (°C)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-01
</td>
<td style="text-align:center;">
5.7
</td>
<td style="text-align:center;">
-0.2
</td>
<td style="text-align:center;">
2.75
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-02
</td>
<td style="text-align:center;">
6.3
</td>
<td style="text-align:center;">
0.8
</td>
<td style="text-align:center;">
3.55
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-03
</td>
<td style="text-align:center;">
7.2
</td>
<td style="text-align:center;">
1.8
</td>
<td style="text-align:center;">
4.50
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-04
</td>
<td style="text-align:center;">
8.0
</td>
<td style="text-align:center;">
1.8
</td>
<td style="text-align:center;">
4.90
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-05
</td>
<td style="text-align:center;">
5.3
</td>
<td style="text-align:center;">
0.8
</td>
<td style="text-align:center;">
3.05
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-06
</td>
<td style="text-align:center;">
10.0
</td>
<td style="text-align:center;">
1.3
</td>
<td style="text-align:center;">
5.65
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-07
</td>
<td style="text-align:center;">
8.9
</td>
<td style="text-align:center;">
1.4
</td>
<td style="text-align:center;">
5.15
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-08
</td>
<td style="text-align:center;">
3.0
</td>
<td style="text-align:center;">
0.1
</td>
<td style="text-align:center;">
1.55
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-09
</td>
<td style="text-align:center;">
0.8
</td>
<td style="text-align:center;">
-0.1
</td>
<td style="text-align:center;">
0.35
</td>
</tr>
<tr>
<td style="text-align:center;">
1839
</td>
<td style="text-align:center;">
1839-01-10
</td>
<td style="text-align:center;">
2.8
</td>
<td style="text-align:center;">
-2.8
</td>
<td style="text-align:center;">
0.00
</td>
</tr>
<tr>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>Reproducing Quetelet’s law is now a simple matter of calculating the sum of the squared daily temperature from the day of last frost until the bloom day. We could use the day of last frost reported in Quetelet’s <em>Letters</em>. However, since we will replicate Quetelet’s analysis with recent data in a later section, we use our own definition of the day of last frost. We define the day of last frost to be the day following the last day the maximum temperature is below 0. The <code>R</code> code below creates the function <code>doy_last_frost</code> to extract the day of last frost from the maximum temperature. To demonstrate this function, we then compare the bloom date with the last frost date in 1839, the first year Quetelet observed.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb4-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb4-2">doy_last_frost <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(tmax, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">doy_max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) {</span>
<span id="cb4-3">  dof <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(tmax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>doy_max] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(dof) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(dof) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-5">  }</span>
<span id="cb4-6"></span>
<span id="cb4-7">bloom_day <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb4-8">  lilac <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1839</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(doy) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1839-01-01"</span>)</span>
<span id="cb4-12">  </span>
<span id="cb4-13">frost_day <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb4-14">  temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1839</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(tmax) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doy_last_frost</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1839-01-01"</span>) </span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">last frost date</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> frost_day, </span>
<span id="cb4-20">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bloom date</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> bloom_day) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb4-22">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 3: Last frost date and lilac bloom date at Brussels Observatory in 1839."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>()</span>
<span id="cb4-24"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table3">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 3:</b> Last frost date and lilac bloom date at Brussels Observatory in 1839.
</caption>
<thead>
<tr>
<th style="text-align:center;">
last frost date
</th>
<th style="text-align:center;">
bloom date
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
1839-03-08
</td>
<td style="text-align:center;">
1839-05-11
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>If Quetelet’s law of the flowering plants is correct, Table 3 has the following interpretation. On March 8, 1839 the lilacs at Brussels Observatory began “collecting” temperature. The lilacs continued to “collect” temperature until May 11, at which point they exceeded their 4264°C² quota and bloomed. We visualize this theory in Figure 4 with the <code>R</code> packages <code>ggplot2</code>, a member of the set of packages that constitute the “tidyverse” <span class="citation" data-cites="Wickham2019">(2019)</span>, and <code>plotly</code>.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb5-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb5-2">(temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(date <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1839-06-01"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(date, temp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb5-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb5-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"midrange temperature (°C)"</span>,</span>
<span id="cb5-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> </span>
<span id="cb5-11">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Figure 4: According to Quetelet's law, the lilacs bloom when exposed to 4264°C² following the last frost."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(bloom_day, frost_day)), </span>
<span id="cb5-13">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotly</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_annotations</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(frost_day, bloom_day)),</span>
<span id="cb5-16">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb5-17">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"last</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">frost"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">bloom"</span>),</span>
<span id="cb5-18">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">font =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb5-19">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ay =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb5-20">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xshift =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">config</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">displaylogo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb5-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/fig4.png" class="lightbox" data-description="Author

provided,

<a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;>CC BY 4.0</a>" data-gallery="quarto-lightbox-gallery-7" title="A line graph of midrange temperature by day, for January to June 1839, with day of last frost (March 8) and day of first bloom (May 11) marked by vertical dashed lines."><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/fig4.png" class="img-fluid figure-img" alt="A line graph of midrange temperature by day, for January to June 1839, with day of last frost (March 8) and day of first bloom (May 11) marked by vertical dashed lines."></a></p>
</figure>
</div>
<div class="figure-caption">
<p><strong>Figure 4:</strong> According to Quetelet’s law, the lilacs bloom when exposed to 4264°C² following the last frost. Author provided, <a href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>.</p>
</div>
<p>We now have all the ingredients necessary to reproduce Quetelet’s findings. Our reproduction is greatly simplified by using the <code>nest</code> function from the <code>tidyr</code> package, another member of the “tidyverse”. For an overview of <code>nest</code>, see the <a href="https://r4ds.had.co.nz/many-models.html?q=nest#nested-data">“Nested data” section</a> of <span class="citation" data-cites="grolemund2017r">Grolemund and Wickham (2017)</span>. We will group the data by year, nest, calculate the cumulative squared temperature from the frost date to the bloom date within each year, and then unnest. We ignore temperatures below 0°C. That is, temperatures below 0°C are set to 0°C. We do this because it is clear from Quetelet’s derivation of the law that only positive temperatures should be squared. See the next section for details.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb6-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb6-2">quetelet <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb6-3">  temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(lilac) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">law =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmax</span>(.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doy_last_frost</span>(.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tmax) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>doy]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(law) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb6-10"></span>
<span id="cb6-11">quetelet <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Quetelet =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4264</span>, </span>
<span id="cb6-13">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(law), </span>
<span id="cb6-14">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(law)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()),</span>
<span id="cb6-15">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ci  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"["</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(est <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> se), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(est <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> se), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"]"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dig =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb6-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, </span>
<span id="cb6-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quetelet's law (°C²)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"estimate (°C²)"</span>, </span>
<span id="cb6-19">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"standard error (°C²)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"95% confidence interval (°C²)"</span>),</span>
<span id="cb6-20">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 4: Reproduction of Quetelet's analysis."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>()</span>
<span id="cb6-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table4">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 4:</b> Reproduction of Quetelet’s analysis.
</caption>
<thead>
<tr>
<th style="text-align:center;">
Quetelet’s law (°C²)
</th>
<th style="text-align:center;">
estimate (°C²)
</th>
<th style="text-align:center;">
standard error (°C²)
</th>
<th style="text-align:center;">
95% confidence interval (°C²)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
4264
</td>
<td style="text-align:center;">
4261
</td>
<td style="text-align:center;">
197
</td>
<td style="text-align:center;">
[3867, 4656]
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>The results show that Quetelet’s findings are indeed reproducible. Quetelet estimated that lilacs bloom once exposed to 4264°C² following the last frost. Our reanalysis suggests a similar amount. However, 4264°C² is the overall average across all years – the estimated amount needed to bloom varies year to year. As a result, the average has a 95% confidence interval of approximately 3870°C² to 4660°C². Quetelet was well aware of this variation. He argued it was due to unobserved factors that influence growing conditions and change each year, and he dedicated significant space in his <em>Letters</em> to discuss them.</p>
<p>These unobserved factors limit the accuracy of predictions made using the law. To assess the predictive accuracy of the law, we temporarily ignore the bloom dates Quetelet observed. Instead, we apply the 4264°C² quota to the temperature records at Brussels Observatory to predict the bloom date. We then compare our predictions with the bloom date Quetelet observed. The <code>R</code> code below creates the function <code>doy_prediction</code> to estimate the day the lilac will bloom from temperature records. Table 5 summarizes the accuracy of Quetelet’s law by the mean absolute error and root mean squared error.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb7-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb7-2">doy_prediction <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(temp, tmax)</span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doy_last_frost</span>(tmax) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which.max</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmax</span>(temp[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doy_last_frost</span>(tmax) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4264</span>)</span>
<span id="cb7-4"></span>
<span id="cb7-5">quetelet <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doy_prediction</span>(.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, .<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tmax))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(pred) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mae  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(doy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pred)),</span>
<span id="cb7-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rmse =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((doy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pred)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dig =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb7-13">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean absolute error (days)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"root mean squared error (days)"</span>),</span>
<span id="cb7-14">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 5: Predictions using Quetelet's law are accurate within a week on average."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>()</span>
<span id="cb7-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table5">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 5:</b> Predictions using Quetelet’s law are accurate within a week on average.
</caption>
<thead>
<tr>
<th style="text-align:center;">
mean absolute error (days)
</th>
<th style="text-align:center;">
root mean squared error (days)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
6
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>Table 5 indicates that predictions made using the law are accurate to within a week on average. For comparison purposes, we also predict the day the lilacs will bloom using the average bloom date between 1839 and 1852. That is, on average the lilac bloomed on April 30 (April 29 on leap years), and we check the accuracy of simply predicting this average date each year. Table 6 indicates the average bloom date yields predictions that are less accurate by an average of two days.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb8-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb8-2">quetelet <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(doy),</span>
<span id="cb8-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mae  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(doy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pred)),</span>
<span id="cb8-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rmse =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((doy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pred)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(mae, rmse) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dig =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb8-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb8-9">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean absolute error (days)"</span>,</span>
<span id="cb8-10">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"root mean squared error (days)"</span>),</span>
<span id="cb8-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 6: Predictions using the average bloom date are off by a week or more on average."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>()</span>
<span id="cb8-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table6">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 6:</b> Predictions using the average bloom date are off by a week or more on average.
</caption>
<thead>
<tr>
<th style="text-align:center;">
mean absolute error (days)
</th>
<th style="text-align:center;">
root mean squared error (days)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
7
</td>
<td style="text-align:center;">
9
</td>
</tr>
</tbody>

</table>
</div>
</div>
</section>
<section id="quetelets-derivation-of-the-law-of-the-flowering-plants" class="level2">
<h2 class="anchored" data-anchor-id="quetelets-derivation-of-the-law-of-the-flowering-plants">Quetelet’s derivation of the law of the flowering plants</h2>
<p>Quetelet believed that, as in physics, universal laws govern social and biological phenomenon. Quetelet was not only inspired by physics to describe social and biological patterns using mathematical formulas. He often took his formulas directly from physics. In fact, you may have already recognized similarities between his law and Newton’s second law of motion.</p>
<p>Quetelet reasoned that temperature exerts a “force” on plants in the same way that gravity exerts a force on a falling object. Newton’s second law states that acceleration is proportional to force. It follows that an object initially at rest and subject to a constant force will travel a distance proportional to time squared. Quetelet simply substituted temperature for time.</p>
<p>We briefly elaborate. Let <img src="https://latex.codecogs.com/png.latex?d(t)"> denote the distance an object travels after time <img src="https://latex.codecogs.com/png.latex?t">. Let <img src="https://latex.codecogs.com/png.latex?v(t)%20=%20d'(t)"> denote its speed and <img src="https://latex.codecogs.com/png.latex?a(t)%20=%20v'(t)"> its acceleration. If acceleration is constant, i.e.&nbsp;<img src="https://latex.codecogs.com/png.latex?a(t)%20=%20c">,</p>
<div style="text-align:center;">
<p><img src="https://latex.codecogs.com/png.latex?v(t)%20=%20%5Cint_0%5Et%20a(s)%20%5C,%20ds%20=%20%5Cint_0%5Et%20c%20%5C,%20ds%20=%20c%20t"></p>
</div>
<p>and</p>
<div style="text-align:center;">
<p><img src="https://latex.codecogs.com/png.latex?d(t)%20=%20%5Cint_0%5Et%20v(s)%20%5C,%20ds%20=%20%5Cint_0%5Et%20c%20s%20%5C,%20ds%20=%20%5Ctfrac%7Bc%7D%7B2%7D%20t%5E2"></p>
</div>
<p>Quetelet imagined plants experience time in temperature and bloom after “traveling” distance <img src="https://latex.codecogs.com/png.latex?d_*">. If a plant is exposed to temperature <img src="https://latex.codecogs.com/png.latex?t_i"> on day <img src="https://latex.codecogs.com/png.latex?i%20=%201,%202,%20%5Cldots">, then the bloom date, <img src="https://latex.codecogs.com/png.latex?n_*">, is the first day <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bi=1%7D%5E%7Bn_*%7D%20%5Ctfrac%7Bc%7D%7B2%7D%20t_i%5E2%20%5Cgeq%20d_*">. Multiplying both sides of the inequality by <img src="https://latex.codecogs.com/png.latex?%5Ctfrac%7B2%7D%7Bc%7D">, yields Quetelet’s law: the bloom is the first day, <img src="https://latex.codecogs.com/png.latex?n_*">, that <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bi=1%7D%5E%7Bn_*%7D%20t_i%5E2%20%5Cgeq%20%5Ctfrac%7B2%7D%7Bc%7D%20d_*">.</p>
<p>The derivation of laws like the law of the flowering plants was popular in the nineteenth century. But any similarities between the “force” of temperature and the force of gravity are likely coincidental. We are not aware of any biological mechanisms that justify Quetelet’s application of Newton’s law.</p>
<p>Today, the law of the flowering plants is considered a heuristic, or rule of thumb, that approximates complicated biological mechanisms. Like Quetelet, scientists model plants as experiencing time in temperature instead of calendar time. These temperature units are typically called “growing degree days”. Scientists often find that plants may only be sensitive to temperatures in specific ranges or “modified growing degree days”. Although modern statistical methods can greatly improve the accuracy of predictions, laws like Quetelet’s remain popular because they are simple to communicate and easy to replicate, as we demonstrate in the next section.</p>
</section>
<section id="replicating-quetelets-law-of-the-flowering-plants" class="level2">
<h2 class="anchored" data-anchor-id="replicating-quetelets-law-of-the-flowering-plants">Replicating Quetelet’s law of the flowering plants</h2>
<p>In the previous section, we explained how Quetelet derived the law of the flowering plants. Quetelet believed the law of the flowering plants was universal, describing the bloom date of all flowers around the world and in any year. Whether the law can in fact be considered universal requires replicating Quetelet’s results with new data collected at a different location in a different year.</p>
<p>In this section, we replicate the law of the flowering plants using lilac bloom dates observed by scientists between 1956 and 2009 at 53 locations throughout the Pacific Northwest <span class="citation" data-cites="rosemartin_denny_weltzin_lee_marsh_wilson_mehdipoor_zurita-milla_schwartz_2015">(2015)</span>. The data can be downloaded from the USA National Phenology Network using the <code>rnpn</code> package <span class="citation" data-cites="the_comprehensive_r_archive_network_2022">(2022)</span>. For space considerations, the <code>R</code> code that downloads and cleans the data is provided in the Appendix. Running this code yields the tibble <code>usa_npn</code>. Each row of the tibble corresponds with a bloom date observed at a given site in a given year. There are 31 columns, only seven of which we use in our replication. The remaining columns are documented in the <code>rnpn</code> package, and we will not review them here.</p>
<p>Table 7 displays six of the seven columns (and only the first 10 rows of the full table). These columns are defined in the same way as the columns of Table 1, except for “site_id”, which denotes the site at which the observation was made. Table 1 does not have a “site_id” column because all observations were made at the same site, Brussels Observatory.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb9-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/jauerbach/miscellaneous/blob/main/usa_npn.RData?raw=true"</span>))</span>
<span id="cb9-3"></span>
<span id="cb9-4">usa_npn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transmute</span>(site_id, </span>
<span id="cb9-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> first_yes_month, </span>
<span id="cb9-7">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day   =</span> first_yes_day, </span>
<span id="cb9-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year  =</span> first_yes_year, </span>
<span id="cb9-9">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(month, day, year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%m %d %Y"</span>),</span>
<span id="cb9-10">            doy) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb9-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 7: Bloom dates of lilacs observed in pacific northwest between 1956 and 2009."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scroll_box</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100%"</span>, </span>
<span id="cb9-15">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"400px"</span>)</span>
<span id="cb9-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table7">
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; margin-bottom: 1.5em; ">

<table class="table" style="margin-left: auto; margin-right: auto;">
<caption>
<b>Table 7:</b> Bloom dates of lilacs observed in pacific northwest between 1956 and 2009.
</caption>
<thead>
<tr>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
site_id
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
month
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
day
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
year
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
date
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
doy
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
25
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-05-25
</td>
<td style="text-align:center;">
146
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
22
</td>
<td style="text-align:center;">
1957
</td>
<td style="text-align:center;">
1957-05-22
</td>
<td style="text-align:center;">
142
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
1958
</td>
<td style="text-align:center;">
1958-05-12
</td>
<td style="text-align:center;">
132
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
6
</td>
<td style="text-align:center;">
3
</td>
<td style="text-align:center;">
1959
</td>
<td style="text-align:center;">
1959-06-03
</td>
<td style="text-align:center;">
154
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
27
</td>
<td style="text-align:center;">
1960
</td>
<td style="text-align:center;">
1960-05-27
</td>
<td style="text-align:center;">
148
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
27
</td>
<td style="text-align:center;">
1961
</td>
<td style="text-align:center;">
1961-05-27
</td>
<td style="text-align:center;">
147
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
26
</td>
<td style="text-align:center;">
1962
</td>
<td style="text-align:center;">
1962-05-26
</td>
<td style="text-align:center;">
146
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
24
</td>
<td style="text-align:center;">
1963
</td>
<td style="text-align:center;">
1963-05-24
</td>
<td style="text-align:center;">
144
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
28
</td>
<td style="text-align:center;">
1964
</td>
<td style="text-align:center;">
1964-05-28
</td>
<td style="text-align:center;">
149
</td>
</tr>
<tr>
<td style="text-align:center;">
150
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
26
</td>
<td style="text-align:center;">
1966
</td>
<td style="text-align:center;">
1966-05-26
</td>
<td style="text-align:center;">
146
</td>
</tr>
<tr>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>The seventh column we review is “temp”. Each row of “temp” is a tibble of temperature records taken at the nearest station in the Global Historical Climatology Network. The first tibble (again, only the first 10 rows) is displayed in Table 8 below. The columns are defined in the same way as the columns of Table 2, except for “id”, which denotes the location at which the temperature record was made. Table 2 does not have an “id” column because all observations were made at the same site, Brussels Observatory.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb10-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb10-2">usa_npn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(temp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-4">  .[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(id, year, date, tmax, tmin, temp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb10-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maximum temperature (°C)"</span>, </span>
<span id="cb10-9">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minimum temperature (°C)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"midrange temperature (°C)"</span>),</span>
<span id="cb10-10">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 8: Temperature observed at an example pacific northwest site in 1956."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scroll_box</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100%"</span>, </span>
<span id="cb10-13">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"400px"</span>)</span>
<span id="cb10-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table8">
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto;">
<caption>
<b>Table 8:</b> Temperature observed at an example pacific northwest site in 1956.
</caption>
<thead>
<tr>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
id
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
year
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
date
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
maximum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
minimum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
midrange temperature (°C)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-01
</td>
<td style="text-align:center;">
5.6
</td>
<td style="text-align:center;">
-5.6
</td>
<td style="text-align:center;">
0.00
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-02
</td>
<td style="text-align:center;">
1.7
</td>
<td style="text-align:center;">
-7.2
</td>
<td style="text-align:center;">
-2.75
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-03
</td>
<td style="text-align:center;">
3.3
</td>
<td style="text-align:center;">
-11.7
</td>
<td style="text-align:center;">
-4.20
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-04
</td>
<td style="text-align:center;">
4.4
</td>
<td style="text-align:center;">
-10.0
</td>
<td style="text-align:center;">
-2.80
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-05
</td>
<td style="text-align:center;">
7.8
</td>
<td style="text-align:center;">
0.0
</td>
<td style="text-align:center;">
3.90
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-06
</td>
<td style="text-align:center;">
4.4
</td>
<td style="text-align:center;">
-11.1
</td>
<td style="text-align:center;">
-3.35
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-07
</td>
<td style="text-align:center;">
2.8
</td>
<td style="text-align:center;">
-6.1
</td>
<td style="text-align:center;">
-1.65
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-08
</td>
<td style="text-align:center;">
4.4
</td>
<td style="text-align:center;">
-4.4
</td>
<td style="text-align:center;">
0.00
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-09
</td>
<td style="text-align:center;">
1.7
</td>
<td style="text-align:center;">
-9.4
</td>
<td style="text-align:center;">
-3.85
</td>
</tr>
<tr>
<td style="text-align:center;">
USC00245761
</td>
<td style="text-align:center;">
1956
</td>
<td style="text-align:center;">
1956-01-10
</td>
<td style="text-align:center;">
2.8
</td>
<td style="text-align:center;">
-6.1
</td>
<td style="text-align:center;">
-1.65
</td>
</tr>
<tr>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>We are now prepared to replicate Quetelet’s findings. We will use <code>R</code> code nearly identical to the code we used to reproduce Quetelet’s findings earlier. The main difference is due to the fact that temperature records are dependent across sites within a year. To account for this dependence, we compute the cumulative temperature squared from the last frost to the bloom date for each site and year. We then take the average across all sites within a year. Finally, we calculate the standard error and confidence interval using only the variation of the averages across years. Table 9 displays the results.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb11-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb11-2">usa_npn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>             </span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(usa_npn)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">law =</span> </span>
<span id="cb11-5">           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(temp, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmax</span>(.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doy_last_frost</span>(.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tmax, doy) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(doy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(law) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>    </span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">law =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(law)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Quetelet =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4264</span>, </span>
<span id="cb11-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(law), </span>
<span id="cb11-11">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(law) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()),</span>
<span id="cb11-12">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ci  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"["</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(est <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> se), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(est <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> se), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"]"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dig =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb11-14">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb11-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quetelet's law (°C²)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"estimate (°C²)"</span>,</span>
<span id="cb11-16">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"standard error (°C²)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"95% confidence interval (°C²)"</span>),</span>
<span id="cb11-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 9: Replication of Quetelet's analysis."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>()</span>
<span id="cb11-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table9">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 9:</b> Replication of Quetelet’s analysis.
</caption>
<thead>
<tr>
<th style="text-align:center;">
Quetelet’s law (°C²)
</th>
<th style="text-align:center;">
estimate (°C²)
</th>
<th style="text-align:center;">
standard error (°C²)
</th>
<th style="text-align:center;">
95% confidence interval (°C²)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
4264
</td>
<td style="text-align:center;">
4329
</td>
<td style="text-align:center;">
116
</td>
<td style="text-align:center;">
[4098, 4560]
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>Table 9 indicates that Quetelet’s findings are replicable in the sense that the confidence interval calculated using Quetelet’s data (Table 4) overlaps with the confidence interval calculated using the USA lilac data (Table 9). The standard error in Table 9 is smaller than Table 4 because the replication uses 54 years of data compared to Quetelet’s 14. Note that in the <code>R</code> code above, we subtract 1 from “doy” to correct for differences in how the bloom date is reported. This correction is not particularly important; the confidence intervals still overlap when this correction is removed.</p>
<p>We now investigate the accuracy of Quetelet’s law when applied to the USA lilac data. As before, we make use of the <code>doy_prediction</code> function.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb12-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb12-2">usa_npn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb12-3">  usa_npn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(temp, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doy_prediction</span>(.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, .<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tmax))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(pred) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb12-7"></span>
<span id="cb12-8">usa_npn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mae  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(doy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pred)),</span>
<span id="cb12-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rmse =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((doy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pred)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dig =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb12-12">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, </span>
<span id="cb12-13">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean absolute error (days)"</span>,</span>
<span id="cb12-14">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"root mean squared error (days)"</span>),</span>
<span id="cb12-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 10: Predictions using Quetelet's law are accurate within about two weeks on average."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>()</span>
<span id="cb12-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table10">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 10:</b> Predictions using Quetelet’s law are accurate within about two weeks on average.
</caption>
<thead>
<tr>
<th style="text-align:center;">
mean absolute error (days)
</th>
<th style="text-align:center;">
root mean squared error (days)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
10
</td>
<td style="text-align:center;">
15
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>Table 10 indicates that the predictions are accurate to within two weeks on average. Recall that the predictions using Quetelet’s own data were accurate to within one week on average (Table 5). We speculate that the decrease in accuracy is due in part to the fact that both Quetelet’s lilacs and the temperature were observed at the same site, Brussels Observatory. In some cases, the USA lilacs were a few miles from where the temperature was recorded.</p>
<p>Although the accuracy of the predictions made using Quetelet’s law is lower when applied to the USA lilac data, Figure 5 indicates that the law produces the correct bloom date on average. The figure plots the predictions made by the law against the actual bloom dates scientists observed. Note that instead of representing prediction-observation pairs as points in a scatter plot, the data are represented using blue contours. We use contours because there are more than 1,500 observations – too many to study using a scatter plot.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb13-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb13-2">(usa_npn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-3">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">doy =</span> first_yes_doy) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-4">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(pred) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-5">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-6">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predicted =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-01-01"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pred,</span>
<span id="cb13-7">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">observed =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-01-01"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> doy) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-8">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> observed, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> predicted) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_density2d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contour_var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ndensity"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date observed"</span>, </span>
<span id="cb13-13">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date predicted"</span>,</span>
<span id="cb13-14">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Figure 5: Predictions using Quetelet's law are accurate within about two weeks on average."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotly</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tooltip =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">config</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">displaylogo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb13-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/fig5.png" class="lightbox" data-description="Author

provided,

<a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;>CC BY 4.0</a>" data-gallery="quarto-lightbox-gallery-8" title="This figure plots the predictions made by Quetelet's law against the actual bloom dates scientists observed from US lilac data. Data are represented using blue contours, and a dotted line of equality is drawn through the graph. The dotted line intersects the blue contours at their peak, suggesting that the law derived from Quetelet’s data accurately predicts the typical bloom date of the USA data."><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/fig5.png" class="img-fluid figure-img" alt="This figure plots the predictions made by Quetelet's law against the actual bloom dates scientists observed from US lilac data. Data are represented using blue contours, and a dotted line of equality is drawn through the graph. The dotted line intersects the blue contours at their peak, suggesting that the law derived from Quetelet’s data accurately predicts the typical bloom date of the USA data."></a></p>
</figure>
</div>
<div class="figure-caption">
<p><strong>Figure 5:</strong> Predictions using Quetelet’s law are accurate within about two weeks on average. Author provided, <a href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>.</p>
</div>
<p>The contours are easy to interpret. The blue lines are much like a mountain range observed from above. The inner circles are peaks of high elevation in which many prediction-observation pairs co-occur. The outer circles are areas of low elevation in which few prediction-observation pairs co-occur.</p>
<p>The dotted line is the “y = x” line, having zero intercept and unit slope. Prediction-observation pairs that lie on the line indicate perfect predictions. The fact that the dotted line intersects the blue contours at their peak suggests the law derived from Quetelet’s data accurately predicts the typical bloom date of the USA data. This accuracy is impressive given the fact that the USA lilacs were observed more than a century later and on a different continent. The blue curves deviate from the line by about two weeks in the vertical direction, which is consistent with Table 10.</p>
<p>An average accuracy of two weeks might not sound impressive. But it is far more accurate than using the average bloom date Quetelet observed, April 30 (April 29 on leap years). The average bloom date yields predictions that are off by an additional eleven days on average.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb14-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb14-2">usa_npn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">doy =</span> first_yes_doy) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb14-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(quetelet<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>doy), </span>
<span id="cb14-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mae  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(doy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pred)),</span>
<span id="cb14-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rmse =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>((doy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pred)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(mae, rmse) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(</span>
<span id="cb14-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dig =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb14-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb14-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean absolute error (days)"</span>,</span>
<span id="cb14-14">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"root mean squared error (days)"</span>),</span>
<span id="cb14-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 11: Predictions using the average bloom date are off by three weeks or more on average."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb14-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>()</span>
<span id="cb14-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table11">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 11:</b> Predictions using the average bloom date are off by three weeks or more on average.
</caption>
<thead>
<tr>
<th style="text-align:center;">
mean absolute error (days)
</th>
<th style="text-align:center;">
root mean squared error (days)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
21
</td>
<td style="text-align:center;">
24
</td>
</tr>
</tbody>

</table>
</div>
</div>
</section>
<section id="predicting-the-day-the-lilac-will-bloom-in-brussels-in-2023" class="level2">
<h2 class="anchored" data-anchor-id="predicting-the-day-the-lilac-will-bloom-in-brussels-in-2023">Predicting the day the lilac will bloom in Brussels in 2023</h2>
<p>Any weather forecast can become a flower forecast by applying the law of the flowering plants. In this section, we use the AccuWeather forecast to predict the day a hypothetical lilac will bloom in Brussels in 2023. AccuWeather forecasts daily maximum and minimum temperatures three months into the future. We do not evaluate the quality of these forecasts. The purpose of this section is to simply convert them into flower forecasts.</p>
<p>We use the AccuWeather forecast as it appeared on the webpage <a href="https://www.accuweather.com/en/be/brussels/27581/january-weather/27581?year=2023">AccuWeather.com</a> on February 19, 2023. AccuWeather reports the forecast for each month on a separate webpage. For reproducibility, we saved each page on the <a href="https://web.archive.org/web/20230219151906/https://www.accuweather.com/en/be/brussels/27581/january-weather/27581?year=2023&amp;unit=c">Internet Archive</a>. The following <code>R</code> code creates the function <code>get_weather_table</code> to retrieve each page we saved, extract the forecast contained within that page, and arrange the data as a tibble. The <code>get_weather_table</code> function combines several functions from the <code>rvest</code> package, which is yet another member of the “tidyverse”. In particular, the forecast on each page is contained within the div “monthly-calendar” and can be extracted with the <code>html_nodes</code> and <code>html_text2</code> functions.</p>
<p>Applying the <code>get_weather_table</code> function to the url for each page yields a five column tibble <code>temp_br</code>, with columns defined in the same way as the tibble <code>temp</code>, discussed in previous sections. The first 10 rows are below; the data are also available on the author’s <a href="https://raw.githubusercontent.com/jauerbach/miscellaneous/main/temp_br.csv">GitHub</a>.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb15-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb15-2"> get_weather_table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(url)</span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_html</span>(url) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_nodes</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"div.monthly-calendar"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_text2</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_remove_all</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"°|Hist. Avg. "</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simplify =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb15-10">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb15-11">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dimnames =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"day"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmax"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmin"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb15-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span></span>
<span id="cb15-15">      (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(day) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> (<span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))))</span>
<span id="cb15-16"></span>
<span id="cb15-17">temp_br <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb15-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb15-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_url =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://web.archive.org/web/20230219151906/https://www.accuweather.com/en/be/brussels/27581/"</span>,</span>
<span id="cb15-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> month.name[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>],</span>
<span id="cb15-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2023</span>,</span>
<span id="cb15-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">url =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(base_url, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tolower</span>(month), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-weather/27581?year="</span>, year, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&amp;unit=c"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(url, get_weather_table)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(temp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reduce</span>(bind_rows) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transmute</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-01-01"</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-05-31"</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb15-27">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y"</span>)),</span>
<span id="cb15-28">            tmax,</span>
<span id="cb15-29">            tmin,</span>
<span id="cb15-30">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> (tmax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tmin) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb15-31"></span>
<span id="cb15-32">temp_br <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">relocate</span>(year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dig =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb15-35">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, </span>
<span id="cb15-36">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maximum temperature (°C)"</span>,</span>
<span id="cb15-37">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minimum temperature (°C)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"midrange temperature (°C)"</span>),</span>
<span id="cb15-38">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 12: Temperature forecast for Brussels, retrieved on February 19, 2023."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scroll_box</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100%"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"400px"</span>)</span>
<span id="cb15-41"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table12">
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto;">
<caption>
<b>Table 12:</b> Temperature forecast for Brussels, retrieved on February 19, 2023.
</caption>
<thead>
<tr>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
year
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
date
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
maximum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
minimum temperature (°C)
</th>
<th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;">
midrange temperature (°C)
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-01
</td>
<td style="text-align:center;">
15
</td>
<td style="text-align:center;">
11
</td>
<td style="text-align:center;">
13.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-02
</td>
<td style="text-align:center;">
14
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
9.5
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-03
</td>
<td style="text-align:center;">
9
</td>
<td style="text-align:center;">
3
</td>
<td style="text-align:center;">
6.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-04
</td>
<td style="text-align:center;">
13
</td>
<td style="text-align:center;">
8
</td>
<td style="text-align:center;">
10.5
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-05
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
10
</td>
<td style="text-align:center;">
11.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-06
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
10
</td>
<td style="text-align:center;">
11.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-07
</td>
<td style="text-align:center;">
11
</td>
<td style="text-align:center;">
9
</td>
<td style="text-align:center;">
10.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-08
</td>
<td style="text-align:center;">
10
</td>
<td style="text-align:center;">
6
</td>
<td style="text-align:center;">
8.0
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-09
</td>
<td style="text-align:center;">
8
</td>
<td style="text-align:center;">
5
</td>
<td style="text-align:center;">
6.5
</td>
</tr>
<tr>
<td style="text-align:center;">
2023
</td>
<td style="text-align:center;">
2023-01-10
</td>
<td style="text-align:center;">
12
</td>
<td style="text-align:center;">
4
</td>
<td style="text-align:center;">
8.0
</td>
</tr>
<tr>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
<td style="text-align:center;">
…
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>We now predict the day the lilacs will bloom. The <code>R</code> code below uses the <code>doy_prediction</code> and <code>doy_last_frost</code> functions created in earlier sections and displays the prediction in Table 13. At the time of our writing, the predicted date is <strong>April 19</strong>. The forecast is easily updated by providing the url to the updated AccuWeather webpage. (You might use the url <a href="https://web.archive.org/save">https://web.archive.org/save</a> to save a webpage to the Internet Archive to ensure your work is reproducible.)</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb16-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb16-2">bloom_day_br <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb16-3">  temp_br <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doy_prediction</span>(temp, tmax) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-01-01"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(date)</span>
<span id="cb16-6"></span>
<span id="cb16-7">frost_day_br <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb16-8">  temp_br <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(tmax) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doy_last_frost</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-01-01"</span>) </span>
<span id="cb16-11"></span>
<span id="cb16-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">last frost date</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> frost_day_br, </span>
<span id="cb16-13">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bloom date</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> bloom_day_br) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>,</span>
<span id="cb16-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table 13: Last frost date and lilac bloom date in Brussels in 2023."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>()</span>
<span id="cb16-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div id="tab-table13">
<div style="overflow-x: scroll; width:100%; margin-bottom: 1.5em;">

<table class="table" style="margin-left: auto; margin-right: auto; margin-bottom: 1.5em;">
<caption>
<b>Table 13:</b> Last frost date and lilac bloom date in Brussels in 2023.
</caption>
<thead>
<tr>
<th style="text-align:center;">
last frost date
</th>
<th style="text-align:center;">
bloom date
</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">
2023-01-27
</td>
<td style="text-align:center;">
2023-04-19
</td>
</tr>
</tbody>

</table>
</div>
</div>
<p>We visualize the predictions in Figure 6, which has the same interpretation as Figure 4. If the temperature forecast and Quetelet’s law are correct, on January 27, 2023 the lilacs in Brussels began “collecting” temperature. The lilacs will continue to “collect” temperature until April 19, at which point they will exceed their 4264°C² quota and bloom.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb17-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb17-2">(temp_br <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(date, temp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb17-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb17-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"midrange temperature (°C)"</span>,</span>
<span id="cb17-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span></span>
<span id="cb17-10">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Figure 6: According to Quetelet's law, the lilacs will bloom once exposed to 4264°C² following the last frost."</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(frost_day_br, bloom_day_br)), </span>
<span id="cb17-12">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplotly</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_annotations</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(frost_day_br, bloom_day_br)),</span>
<span id="cb17-15">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb17-16">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"last</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">frost"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">bloom"</span>),</span>
<span id="cb17-17">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">font =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>),</span>
<span id="cb17-18">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ay =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb17-19">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xshift =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">config</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">displaylogo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb17-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/fig6.png" class="lightbox" data-description="Author

provided,

<a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;>CC BY 4.0</a>" data-gallery="quarto-lightbox-gallery-9" title="A line graph of midrange temperature by day in Brussels for January 1 to February 18 (observed) and February 19 to May 20 (forecast), 2023, with day of last frost (January 27) and predicted day of first bloom (April 19) marked by vertical dashed lines."><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/fig6.png" class="img-fluid figure-img" alt="A line graph of midrange temperature by day in Brussels for January 1 to February 18 (observed) and February 19 to May 20 (forecast), 2023, with day of last frost (January 27) and predicted day of first bloom (April 19) marked by vertical dashed lines."></a></p>
</figure>
</div>
<div class="figure-caption">
<p><strong>Figure 6:</strong> According to Quetelet’s law, the lilacs will bloom once exposed to 4264°C² following the last frost. Author provided, <a href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>.</p>
</div>
</section>
<section id="quetelets-legacy-advocate-mentor-and-perhaps-data-scientist" class="level2">
<h2 class="anchored" data-anchor-id="quetelets-legacy-advocate-mentor-and-perhaps-data-scientist">Quetelet’s legacy: advocate, mentor, and perhaps data scientist</h2>
<p>In this tutorial, we stated the law of the flowering plants and explained how Quetelet derived it. We also reproduced and replicated Quetelet’s findings before using his law to predict the day the lilac will bloom in Brussels. We now conclude with a reflection on Quetelet’s legacy.</p>
<p>The law of the flowering plants surely stands the test of time. It continues to be used by scientists – with relatively few changes – to plan harvests, manage pests, and study ecosystems stressed by climate change. We speculate the law’s longevity is due to the fact that it balances simplicity with relatively accurate predictions.</p>
<p>Although Quetelet did not discover the law, he did much to advance it. Quetelet founded an international network for “observations of the periodical phenomena” (in addition to numerous statistical societies and publications, including the precursor to the Royal Statistical Society). Quetelet’s network of 80 stations collected observations throughout Europe from 1841 until 1872. In particular, Quetelet collaborated with Charles Morren – who later coined the term phenology, the name of the field that now studies biological life-cycle events like the timing of flower blooms <span class="citation" data-cites="demarée_rutishauser_2011">(Demarée and Rutishauser 2011)</span>.</p>
<p>In recent years, the observations collected through phenology networks have become an important resource for understanding the impacts of climate change. For example, the USA National Phenology Network calculates the Spring Bloom Index, which measures the “first day of spring” using the days lilacs are observed to bloom at locations across the United States. The index is then compared to previous years. Figure 7 shows one comparison, called the Return Interval. The Return Interval is much like a p-value, calculating how frequently more extreme spring indices were observed in previous decades. Bloom dates that are uncommonly early (green) or late (purple) may indicate environments stressed by changing climate. Scientists exploit the relationship between temperature and bloom date to extrapolate the index to areas with few observations.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/six-bloom-return-interval-2020.png" class="lightbox" data-description="Source:

<a
href=&quot;https://www.usanpn.org/files/npn/maps/six-bloom-return-interval-2020.png&quot;>USA
National Phenology Network</a>" data-gallery="quarto-lightbox-gallery-10" title="A map of the United States showing the Spring Bloom Index Return Interval 2020, which measures whether spring is typical when compared to recent decades."><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/six-bloom-return-interval-2020.png" class="img-fluid figure-img" alt="A map of the United States showing the Spring Bloom Index Return Interval 2020, which measures whether spring is typical when compared to recent decades."></a></p>
</figure>
</div>
<div class="figure-caption">
<p><strong>Figure 7:</strong> The Spring Bloom Index Return Interval measures whether spring is typical when compared to recent decades. Source: <a href="https://www.usanpn.org/files/npn/maps/six-bloom-return-interval-2020.png">USA National Phenology Network</a>.</p>
</div>
<p>Quetelet’s emphasis on discovering the universal laws he believed govern social and biological phenomenon has not endured. But data scientists continue to appropriate laws from one area of science to study another. For example, data scientists use neural networks and genetic algorithms to study a wide variety of phenomenon unrelated to neuroscience or genetics. Perhaps Quetelet’s appropriation of Newton’s law, in addition to his careful use of data, make him among the first data scientists?</p>
</section>
<section id="your-turn-do-you-have-what-it-takes-to-beat-quetelets-law" class="level2">
<h2 class="anchored" data-anchor-id="your-turn-do-you-have-what-it-takes-to-beat-quetelets-law">Your turn: Do you have what it takes to beat Quetelet’s law?</h2>
<p>Quetelet reported that a plant flowers when the sum of the daily temperatures squared exceeds a specific quantity. His prediction rule was state of the art in 1833. But surely you, a twenty-first century data scientist, can do better. Here are some ideas to get you started.</p>
<ol type="1">
<li><p>Quetelet squared the temperature before calculating the sum. Would another function of temperature produce a more accurate prediction?</p>
<ol type="i">
<li><p>Remove the square so that a plant flowers once the sum of the daily temperatures exceeds a (different) specific quantity. Does this version of the law produce more accurate predictions? What if you use the daily temperatures cubed? (Beginner)</p></li>
<li><p>Suppose a lilac only registers temperatures between 0°C and 10°C. That is, a lilac experiences temperature below the lower limit, 0°C, as 0°C, and above the upper limit, 10°C, as 10°C. Does the accuracy of the predictions improve if you use the temperature the lilac experienced instead of the ambient temperature measured by a weather station? Write a program that finds the lower and upper limits that produce the most accurate predictions. (Intermediate)</p></li>
<li><p>Quetelet used mean absolute error to evaluate the accuracy of his predictions. But his estimate of the specific quantity of heat needed to bloom, 4264°C², does not actually minimize mean absolute error. Write a program that finds the specific quantity that minimizes mean absolute error. Redo part i. and ii. using this function. (Advanced)</p></li>
</ol></li>
<li><p>Quetelet calculated the sum of the daily temperature squared between the day of last frost and the bloom date. Would another time interval produce more accurate predictions?</p>
<ol type="i">
<li><p>We estimated the day of last frost using the last day the maximum temperature was below 0°C. Try estimating the day of last frost by the last day the midrange temperature was below 0°C? Which estimate yields the most accurate predictions? What if you ignore the day of last frost and simply calculate the sum of the daily temperatures squared between February 1 and the bloom date? When you change the time interval, be sure to calculate the new specific quantity of heat needed to bloom. (Beginner)</p></li>
<li><p>Write a program that finds the time interval which yields the best predictions. (Intermediate)</p></li>
<li><p>Write a program that calculates the prediction rule for many different time intervals. Use cross-validation to combine these prediction rules into a single prediction rule. (Advanced)</p></li>
</ol></li>
<li><p>Quetelet’s law only considers the temperature. Would additional information provide more accurate predictions?</p>
<ol type="i">
<li><p>Is the specific quantity of heat needed to bloom different in years with abnormally cold winters? Would the predictions be more accurate if you use one quantity of heat for years with cold winters and a different quantity of heat for years with warm winters? (Beginner)</p></li>
<li><p>Is the estimated quantity of heat needed to bloom similar for locations close in space and time? Write a program that leverages spatial and temporal correlation to improve the accuracy of the predictions. (Intermediate)</p></li>
<li><p>Some biologists report that a plant must be exposed to a fixed amount of cold temperature in the winter – in addition to a fixed amount of warm temperature in the spring – before it can bloom. Augment the law of the flowering plants to require the accumulation of a specific quantity of cold temperature before the accumulation of a specific quantity of warm temperature. Write a program that uses this new law to predict the day the lilac blooms. (Advanced)</p></li>
</ol></li>
</ol>
<p>Feeling good about your prediction algorithm? Show it off at the annual <a href="https://competition.statistics.gmu.edu/">Cherry Blossom Prediction Competition</a>!</p>
</section>
<section id="appendix-preparing-usa-npn-data" class="level2">
<h2 class="anchored" data-anchor-id="appendix-preparing-usa-npn-data">Appendix: Preparing USA NPN Data</h2>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb18-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{r}</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. download lilac data using `rnpn`</span></span>
<span id="cb18-3">usa_npn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb18-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">npn_download_individual_phenometrics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">request_source =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Jonathan Auerbach"</span>,</span>
<span id="cb18-5">                                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1900</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2050</span>,</span>
<span id="cb18-6">                                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">species_ids =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>,                       </span>
<span id="cb18-7">                                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phenophase_ids =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">77</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">412</span>))            </span>
<span id="cb18-8"></span>
<span id="cb18-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. limit analysis to sites that report more than 25 times</span></span>
<span id="cb18-10">site_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb18-11">  usa_npn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(site_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(site_id)</span>
<span id="cb18-14"></span>
<span id="cb18-15">usa_npn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb18-16">  usa_npn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(site_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> site_ids)</span>
<span id="cb18-18"></span>
<span id="cb18-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. find nearest weather stations for each site</span></span>
<span id="cb18-20">locations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb18-21">  usa_npn <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(site_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latitude =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">first</span>(latitude), </span>
<span id="cb18-24">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longitude =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">first</span>(longitude))</span>
<span id="cb18-25"></span>
<span id="cb18-26">stations <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb18-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ghcnd_stations</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(first_year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(usa_npn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>first_yes_year),</span>
<span id="cb18-29">         last_year  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(usa_npn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>first_yes_year),</span>
<span id="cb18-30">         state <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(id, latitude, longitude, state) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp_flag =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(element <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMIN"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMAX"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>            </span>
<span id="cb18-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(temp_flag <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb18-35"></span>
<span id="cb18-36">dist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> stations <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(latitude, longitude)) </span>
<span id="cb18-37">  stations<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which.min</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>((x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])]</span>
<span id="cb18-38"></span>
<span id="cb18-39">locations<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>station_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(locations, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(x[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latitude"</span>], x[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"longitude"</span>])))</span>
<span id="cb18-40"></span>
<span id="cb18-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. get weather data from nearest station using `rnoaa`</span></span>
<span id="cb18-42">get_station_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(station_id) </span>
<span id="cb18-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ghcnd_search</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stationid =</span> station_id,</span>
<span id="cb18-44">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmin"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmax"</span>),</span>
<span id="cb18-45">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_min =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1956-01-01"</span>,</span>
<span id="cb18-46">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date_max =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2011-12-31"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reduce</span>(left_join, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transmute</span>(id, </span>
<span id="cb18-49">            date, </span>
<span id="cb18-50">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmax =</span> tmax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb18-51">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmin =</span> tmin <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb18-52"></span>
<span id="cb18-53">usa_npn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb18-54">  locations <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(station_id, get_station_data)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right_join</span>(usa_npn, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"site_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latitude"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"longitude"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(usa_npn)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(temp, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-59">                      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> first_yes_year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-60">                      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> (tmin <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tmax) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)),</span>
<span id="cb18-61">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_obs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(temp,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>date,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%j"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)),</span>
<span id="cb18-62">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">doy =</span> first_yes_doy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> first_yes_year) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(num_obs) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  </span>
<span id="cb18-64">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(num_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-65">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb18-66"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<div class="article-btn">
<p><a href="../../../../../../ideas/tutorials/index.html">Explore more Tutorials</a></p>
</div>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-12">
<dl>
<dt>About the author</dt>
<dd>
<strong>Jonathan Auerbach</strong> is an assistant professor in the Department of Statistics at George Mason University. His research covers a wide range of topics at the intersection of statistics and public policy. His interests include the analysis of longitudinal data, particularly for data science and causal inference, as well as urban analytics, open data, and the collection, evaluation, and communication of official statistics. He co-organizes the annual <a href="https://competition.statistics.gmu.edu/">Cherry Blossom Prediction Competition</a> with David Kepplinger and Elizabeth Wolkovich.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2023 Jonathan Auerbach
</dd>
</dl>
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img style="height:22px!important;vertical-align:text-bottom;" src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/https:/mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/https:/mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"></a> Text and code are licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> International licence</a>. Images are not covered by this licence, except where otherwise noted.</p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
Auerbach, Jonathan. 2023. “A demonstration of the law of the flowering plants.” Real World Data Science, April 13, 2023. <a href="https://realworlddatascience.net/ideas/tutorials/posts/2023/04/13/flowers.html">URL</a>
</dd>
</dl>
</div>
</div>
</div>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-chamberlain_2021" class="csl-entry">
Chamberlain, Scott. 2021. <span>“’NOAA’ Weather Data from r [r Package Rnoaa Version 1.3.8].”</span> <em>The Comprehensive R Archive Network</em>. Comprehensive R Archive Network (CRAN). <a href="https://CRAN.R-project.org/package=rnoaa">https://CRAN.R-project.org/package=rnoaa</a>.
</div>
<div id="ref-deréaumur_1735" class="csl-entry">
De Réaumur, René. 1735. <span>“Observations Du Thermometre, Faites a Paris Pendant l’annees 1735, Comparees a Celles Qui Ont Ete Faites Sous La Ligne, a l’isle de France, a Alger Et En Quelques-Unes de Nos Isles de l’amerique.”</span> <em>Mémoire de l’Académie Royale Des Sciences</em>, 545–76. <a href="https://www.academie-sciences.fr/pdf/dossiers/Reaumur/Reaumur_pdf/p545_576_vol3532m.pdf">https://www.academie-sciences.fr/pdf/dossiers/Reaumur/Reaumur_pdf/p545_576_vol3532m.pdf</a>.
</div>
<div id="ref-demarée_rutishauser_2011" class="csl-entry">
Demarée, Gaston R., and This Rutishauser. 2011. <span>“From <span>‘Periodical Observations’</span> to <span>‘Anthochronology’</span> and <span>‘Phenology’</span> – the Scientific Debate Between Adolphe Quetelet and Charles Morren on the Origin of the Word <span>‘Phenology’</span>.”</span> <em>International Journal of Biometeorology</em> 55 (6): 753–61. <a href="https://doi.org/10.1007/s00484-011-0442-5">https://doi.org/10.1007/s00484-011-0442-5</a>.
</div>
<div id="ref-grolemund2017r" class="csl-entry">
Grolemund, Garrett, and Hadley Wickham. 2017. <em>R for Data Science</em>. Sebastopol, CA: O’Reilly Media.
</div>
<div id="ref-marsham_1789" class="csl-entry">
Marsham, Robert. 1789. <span>“XIII. Indications of Spring, Observed by Robert Marsham, Esquire, f. R. S. Of Stratton in Norfolk. Latitude 52° 45’.”</span> <em>Philosophical Transactions of the Royal Society of London</em> 79: 154–56. <a href="https://doi.org/10.1098/rstl.1789.0014">https://doi.org/10.1098/rstl.1789.0014</a>.
</div>
<div id="ref-observatoire1834annales" class="csl-entry">
Observatoire royal de Bruxelles. 1848. <em>Annales de l’observatoire Royal de Bruxelles</em>. Bruxelles: M. Hayez. <a href="https://catalog.hathitrust.org/Record/000553895">https://catalog.hathitrust.org/Record/000553895</a>.
</div>
<div id="ref-quetelet1846lettres" class="csl-entry">
Quetelet, Adolphe. 1846. <em>Lettres à s.a.r. Le Duc Régnant de Saxe-Coburg Et Gotha: Sur La Théorie Des Probabilités, Appliquée Aux Sciences Morales Et Politiques</em>. Bruxelles: M. Hayez. <a href="https://catalog.hathitrust.org/Record/001387625">https://catalog.hathitrust.org/Record/001387625</a>.
</div>
<div id="ref-quetelet_1849" class="csl-entry">
———. 1849. <em>Letters Addressed to h.r.h. The Grand Duke of Saxe Coburg and Gotha on the Theory of Probabilities as Applied to the Moral and Political Sciences</em>. London: C. &amp; E. Layton. <a href="https://catalog.hathitrust.org/Record/008956987">https://catalog.hathitrust.org/Record/008956987</a>.
</div>
<div id="ref-quetelet_1857" class="csl-entry">
———. 1857. <em>Sur Le Climat de La Belgique : De l’état Du Ciel En Général</em>. Bruxelles: M. Hayez. <a href="https://catalog.hathitrust.org/Record/000553895">https://catalog.hathitrust.org/Record/000553895</a>.
</div>
<div id="ref-rosemartin_denny_weltzin_lee_marsh_wilson_mehdipoor_zurita-milla_schwartz_2015" class="csl-entry">
Rosemartin, Alyssa H., Ellen G. Denny, Jake F. Weltzin, R. Lee Marsh, Bruce E. Wilson, Hamed Mehdipoor, Raul Zurita-Milla, and Mark D. Schwartz. 2015. <span>“Lilac and Honeysuckle Phenology Data 1956-2014.”</span> <em>Scientific Data</em> 2 (1). <a href="https://doi.org/10.1038/sdata.2015.38">https://doi.org/10.1038/sdata.2015.38</a>.
</div>
<div id="ref-the_comprehensive_r_archive_network_2022" class="csl-entry">
Rosemartin, Alyssa, Chamberlain Scott, Lee Marsh, and Kevin Wong. 2022. <span>“Interface to the National ’Phenology’ Network ’API’ [r Package Rnpn Version 1.2.5].”</span> <em>The Comprehensive R Archive Network</em>. Comprehensive R Archive Network (CRAN). <a href="https://cran.r-project.org/package=rnpn">https://cran.r-project.org/package=rnpn</a>.
</div>
<div id="ref-Wickham2019" class="csl-entry">
Wickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain François, Garrett Grolemund, et al. 2019. <span>“Welcome to the Tidyverse.”</span> <em>Journal of Open Source Software</em> 4 (43): 1686. <a href="https://doi.org/10.21105/joss.01686">https://doi.org/10.21105/joss.01686</a>.
</div>
</div></section></div> ]]></description>
  <category>Prediction</category>
  <category>History of data science</category>
  <category>Statistics</category>
  <guid>https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/flowers.html</guid>
  <pubDate>Thu, 13 Apr 2023 00:00:00 GMT</pubDate>
  <media:content url="https://michaeldmiles.github.io/michaels-data-blog/ideas/tutorials/posts/2023/04/13/images/quetelet-flowers.png" medium="image" type="image/png" height="105" width="144"/>
</item>
<item>
  <title>Using ‘basket complementarity’ to make product recommendations</title>
  <dc:creator>Moinak Bhaduri</dc:creator>
  <link>https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/03/02/basket-complementarity.html</link>
  <description><![CDATA[ 




<p>Anyone who has ever worked in a retail store will be familiar with the concept of cross-selling. A customer wants a can of paint? Try to sell them some paintbrushes. That new cellphone they’ve just decided to buy? They’ll probably need a case to protect it. Online retailers (and digital services of all sorts) have taken this idea and run with it, to great success. Sophisticated algorithms sort through data on a customer’s past transactions, and those of similar-looking customers, to identify and recommend other products a customer might be interested in.</p>
<p>A large amount of cross-selling, whether attempted in store by a sales assistant or online by an algorithm, relies on the concept of <em>complementarity</em>: that certain products are often bought and/or used together. Relationships between products might be obvious – paint and paintbrushes, for example – or they may be obscure and only revealed through the analysis of large datasets. In a 2021 paper that highlights complementarity’s relevance to association analysis, Puka and Jedrusik put forward “<a href="https://www.mdpi.com/0718-1876/16/4/39">a new measure of complementarity in market basket data</a>”, which sheds light on how product recommendations can be derived.</p>
<div class="callout callout-style-default callout-note callout-titled" style="margin-top: 0rem;">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About the paper
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<p><strong>Title:</strong> A new measure of complementarity in market basket data</p>
<p><strong>Author(s) and year:</strong> Radosław Puka and Stanislaw Jedrusik (2021)</p>
<p><strong>Status:</strong> Published in the <em>Journal of Theoretical and Applied Electronic Commerce Research</em>, open access: <a href="https://www.mdpi.com/0718-1876/16/4/39">HTML</a>, <a href="https://www.mdpi.com/0718-1876/16/4/39/pdf?version=1609984879">PDF</a>.</p>
</div>
</div>
</div>
<p>Inspired by complementarity-based ideas prevalent in microeconomics, Puka and Jedrusik begin by collecting some established ideas from traditional market basket analysis, the key one being “confidence”. In this case, we’re talking about the confidence that item A leads (in a way) to item B (which we can express in notation as <em>conf</em>({A} → {B})). Take a look at Table 1 (below), which presents a numbered list of 18 shopping trips, with details of what was purchased on each trip. Notice how two of the trips (1 and 3) resulted in sales of both milk (B) and cornflakes (A), while five trips (1, 3, 7, 17, and 18) had cornflakes. Under the assumption that someone already has cornflakes in their trolley, the probability that they will buy milk is 2/5 = 0.4. So, <em>conf</em>({cornflakes} → {milk}) = 0.4. The closer this number gets to one, the more automatic the cornflakes–milk connection becomes. This number can therefore be used to recommend an item that is related in some way to another already bought.</p>
<div class="column-body-outset">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/tab1-fig1.png"><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/03/02/images/tab1-fig1.png" class="img-fluid figure-img"></a></p>
</figure>
</div>
</div>
<div class="figure-caption">
<div class="grid">
<div class="g-col-12 g-col-md-4">
<p><strong>Table 1:</strong> A list (with each row representing a trip to a grocery store) that can be seen in one of two ways: (a) a record of what 18 different people bought, or (b) a history of one person’s purchases over 18 trips. The list is similar to the one examined by Puka and Jedrusik, except for the last three rows. These trips, under interpretation (b) may help us develop an understanding of a single shopper’s preferences.</p>
</div>
<div class="g-col-12 g-col-md-8">
<p><strong>Figure 1:</strong> Basket complementarity under varying tolerance. The horizontal axis reports the probability that someone will buy item B under the assumption that A is already in their shopping trolley (i.e., <em>conf</em>({A} → {B})). The vertical axis reports the opposite: the chance that someone will go for A given that B is already in the cart (i.e., <em>conf</em>({B} → {A})). For any pair of items, these two probabilities can be found and, when plotted in 2D, a pair of items generates a single point. The more similar the two probabilities are for each pair, the closer the point comes to the line of equality (the red dashed line that runs diagonally through the origin), and the more complementary the items become. It’s rare that a dot will land exactly on the line of equality, so the green and orange lines parallel to the red line mark how far off a dot is from this ideal setting, using different levels of tolerance. From this we may say, for example, that cornflakes and milk are more complementary to each other than bread rolls and butter, as the first pairing lies closer to the line of equality.</p>
</div>
</div>
</div>
<section id="asymmetry-and-tolerance" class="level2">
<h2 class="anchored" data-anchor-id="asymmetry-and-tolerance">Asymmetry and tolerance</h2>
<p>Milk and cornflakes are reasonably complementary, and we can see from Figure 1 above that, regardless of whether you start by picking up milk or cornflakes, the probabilities of a shopper buying the other item are broadly similar: <em>conf</em>({cornflakes} → {milk}) = 0.4, while <em>conf</em>({milk} → {cornflakes}) = 0.33. There is a small amount of asymmetry in the probabilities in this particular example, but asymmetry can be more extreme for other pairs of items. This leads to the idea of one- and two-sided complementarity. Two items sharing a smallish asymmetry – like milk and cornflakes – will be connected through two-sided complementarity, while large asymmetries indicate one-sided complementarity. Such imbalances will be quite common when, for instance, items of hugely different prices are involved. When someone buys a house, for example, they may want to buy a bookcase, but buying a bookcase doesn’t mean someone wants to buy a house: this would be an instance of one-sided complementarity.</p>
<p>Puka and Jedrusik capitalize on this observation. They define two items to be “basket complementary” if the two probabilities – the normal and its opposite – remain close and reasonably high. The items need to share a bond that is blind to the direction: seeing you bought one, no matter which, means you are (almost equally) likely to buy the other.</p>
<p>It is rare that the two probabilities should be exactly the same, of course, and the authors allow some deviation. Along the red diagonal line of perfect equality (Figure 1) we may lay tolerance bands marking degrees of product inseparability. This, if need be, may lead to the notion of being complementary at such-and-such a tolerance level – 0%, 1%, 5%, etc. – generating a score of sorts. In cases where a dot representing the two-way dependencies between two items falls within a narrow band – corresponding to a smaller tolerance – the more inseparable the items are, and the more sensible a cross-selling recommendation may become.</p>
</section>
<section id="in-conclusion" class="level2">
<h2 class="anchored" data-anchor-id="in-conclusion">In conclusion</h2>
<p>A large part of the world we inhabit, particularly the economy, is powered by recommendations: from strangers, friends and algorithms. That applies not only to the things we buy but also to the things we watch or read. (Perhaps you arrived at this article because of a tweet that Twitter thought you might like, or maybe it was suggested to you by Google News because of your past reading habits.) Whatever the intent of these recommendations, the key challenge is in knowing which two things are functionally or thematically intertwined. Which item or product is, by default, synonymous with which? Puka and Jedrusik deliver an answer: two items that are basket complementary to each other, preferably at a slim tolerance, are inextricably linked. One may be safely offered – perhaps always – whenever the other is already in the shopping basket.</p>
<p>The relative simplicity and interpretability of basket complementary may provide small-scale retailers, starved of analytical wherewithal, a sane and safe strategy for developing their product offer. It might also serve as a benchmark to keep other, more sophisticated recommendation algorithms in check. (In weather forecasting, for example, it is often seen that <a href="https://www.sciencedirect.com/science/article/pii/S0022169415000414">naive benchmarks</a> – such as using today’s temperature to predict tomorrow’s – frequently outperform more advanced models.)</p>
<p>Basket complementarity could also be used to help individuals understand their own shopping habits and the links between the things they buy. I’ve built <a href="https://moinak.shinyapps.io/MarketBasketDashboard/">an interactive dashboard</a> where you can enter your own receipt lists and filter associations based on various confidence thresholds. The <a href="https://github.com/moinakbhaduri/MarketBasketAnalysis">underlying code</a> is also available.</p>
 <iframe src="https://moinak.shinyapps.io/MarketBasketDashboard/" style="border: none; width: 100%; height: 500px" frameborder="0"></iframe>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-6">
<dl>
<dt>About the author</dt>
<dd>
<strong>Moinak Bhaduri</strong> is assistant professor in the Department of Mathematical Sciences, Bentley University. He studies spatio-temporal Poisson processes and others like the self-exciting Hawkes or log-Gaussian Cox processes that are natural generalizations. His primary interest includes developing change-detection algorithms in systems modeled by these stochastic processes, especially through trend permutations.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>About DataScienceBites</dt>
<dd>
<a href="../../../../../../ideas/datasciencebites/index.html"><strong>DataScienceBites</strong></a> is written by graduate students and early career researchers in data science (and related subjects) at universities throughout the world, as well as industry researchers. We publish digestible, engaging summaries of interesting new pre-print and peer-reviewed publications in the data science space, with the goal of making scientific papers more accessible. Find out how to <a href="../../../../../../contributor-docs/datasciencebites.html">become a contributor</a>.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>Copyright and licence</dt>
<dd>
© 2023 Moinak Bhaduri
</dd>
</dl>
<p><a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> <img style="height:22px!important;vertical-align:text-bottom;" src="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/03/02/https:/mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/03/02/https:/mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"></a> This work is licensed under a Creative Commons Attribution 4.0 (CC BY 4.0) <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"> International licence</a>, except where otherwise noted.</p>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>How to cite</dt>
<dd>
Bhaduri, Moinak. 2023. “Using ‘basket complementarity’ to make product recommendations.” Real World Data Science, March 2, 2023. <a href="https://realworlddatascience.net/news-and-views/datasciencebites/posts/2023/03/02/basket-complementarity.html">URL</a>
</dd>
</dl>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>Market basket analysis</category>
  <category>Recommendation systems</category>
  <category>Complementarity</category>
  <guid>https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/03/02/basket-complementarity.html</guid>
  <pubDate>Thu, 02 Mar 2023 00:00:00 GMT</pubDate>
  <media:content url="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/03/02/images/marjan-blan-marjanblan-3nURJV_L7-8-unsplash.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pulling patterns out of data with a graph</title>
  <dc:creator>Andrew Saydjari</dc:creator>
  <link>https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/01/24/pulling-patterns.html</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-note callout-titled" style="margin-top: 0rem;">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About the paper and this post
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<p><strong>Title:</strong> Extracting the main trend in a data set: The Sequencer algorithm</p>
<p><strong>Author(s) and year:</strong> Dalya Baron and Brice Ménard (2021)</p>
<p><strong>Status:</strong> Published in <em>The Astrophysical Journal</em>, open access: <a href="https://iopscience.iop.org/article/10.3847/1538-4357/abfc4d">HTML</a>, <a href="https://iopscience.iop.org/article/10.3847/1538-4357/abfc4d/pdf">PDF</a>.</p>
<p><strong>Editor’s note:</strong> This post is republished with permission from <a href="https://mathstatbites.org/pulling-patterns-out-of-data-with-a-graph/">MathStatBites</a> to demonstrate the Bites concept. For more information about Bites articles and how to contribute to DataScienceBites, see our <a href="../../../../../../contributor-docs/datasciencebites.html" aria-label="Contributor notes for the Data Science Bites blog">notes for contributors</a>.</p>
</div>
</div>
</div>
<p>Large volumes of data are pouring in every day from scientific experiments like <a href="https://home.cern/">CERN</a> and the <a href="https://www.sdss5.org/">Sloan Digital Sky Survey</a>. Data is coming in so fast that researchers struggle to keep pace with the analysis and are increasingly developing automated analysis methods to aid in this herculean task. As a first step, it is now commonplace to perform dimension reduction in order to reduce a large number of measurements to a set of key values that are easier to visualize and interpret.</p>
<p>When working on the cutting edge, another problem scientists often face is that “we don’t know what we don’t know”. For this reason, we often want to simply ask the data, “What is interesting about you?” This is the realm of <a href="https://en.wikipedia.org/wiki/Unsupervised_learning">“unsupervised” methods</a>, where the data itself drives the analysis, with little to no guidance or human labeling of the data.</p>
<p>Many physical processes depend continuously on some driving parameter. For example, the evaporation rate of water increases with temperature. We call these continuous variations in datasets “trends”. Describing a dataset by a single trend reduces it to one dimension - an ordered list. Finding such a trend within a high-dimensional dataset is the aim of a method called “The Sequencer” introduced by Baron and Ménard.</p>
<section id="key-insight-a-tree" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="key-insight-a-tree">Key insight: A tree</h2>
<p>The key insight of Baron and Ménard was to relate trends in data to an object from graph theory called a <a href="https://en.wikipedia.org/wiki/Minimum_spanning_tree">minimum spanning tree</a>. Given a measure of distance between two data points, for example the usual (Euclidean) distance between two points, we can visualize a dataset as a graph. This graph consists of a node (a dot) for each data point. These nodes are then connected by an edge (a line), labeled by the distance between the two data points. The minimum spanning tree is a reduction of this graph to include only enough of the smallest distance edges so that no node is isolated.</p>
<p>What Baron and Ménard realized is that datasets that are “trendy” have elongated and narrow minimum spanning trees. As shown in Figure 1, a totally random dataset results in a graph with many branches while a perfect sequence results in a perfect linear graph. Then, they use connectivity of the nodes in the minimum spanning tree to return an ordering of the data that follows the main trend in the dataset. However, a sequence is all you get. It is up to us to understand and interpret what this trend represents.</p>
<div class="column-page">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/01/24/images/fig1.png" class="img-fluid" alt="Three examples - labelled 'random data', 'noisy sequence', and 'perfect sequence' - demonstrating that data with stronger trends ('noisy' and 'perfect sequence') have more narrow and elongated minimum spanning trees (adapted from Baron and Ménard, Figure 1)."></p>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p><strong>Figure 1:</strong> Examples demonstrating that data with stronger trends have more narrow and elongated minimum spanning trees. Adapted from <a href="https://iopscience.iop.org/article/10.3847/1538-4357/abfc4d" aria-label="Link to Baron and Ménard's 2021 paper, 'Extracting the main trend in a data set: The Sequencer algorithm'">Baron and Ménard (2021)</a>, Figure 1. Figure used under <a href="https://creativecommons.org/licenses/by/4.0/" aria-label="Link to Creative Commons licence">CC BY 4.0</a>.</p>
</div></div><p>Sometimes, the ordering of observations within a data point matters, like in time series data. Measurements taken close in time are more likely to be correlated than measurements taken after a long time delay. Baron and Ménard were careful to include a measure of distance that takes this ordering into account, unlike our usual notion of distance. They argue that this gives them an edge over other common dimension reduction techniques such as <a href="https://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding">t-SNE</a> and <a href="https://umap-learn.readthedocs.io/en/latest/how_umap_works.html">UMAP</a>, and even go so far as to use The Sequencer to optimize the hyperparameters used by these other methods!</p>
</section>
<section id="when-does-it-fail" class="level2">
<h2 class="anchored" data-anchor-id="when-does-it-fail">When does it fail?</h2>
<p>It is important to acknowledge that no statistical or machine-learning tool is a cure-all. And, the authors themselves are quick to point out several limitations that can hinder the application of their method. The Sequencer can struggle when the data has a large dynamic range, a variety of signal strengths relative to noise, or there are multiple trends present in the data. In each case, Baron and Ménard propose ways to mitigate these problems, but practitioners still need to be wary when applying The Sequencer in those instances.</p>
</section>
<section id="what-discoveries-await" class="level2">
<h2 class="anchored" data-anchor-id="what-discoveries-await">What discoveries await?</h2>
<p>To demonstrate the power of their method, Baron and Ménard apply The Sequencer to several real datasets where a pattern was already known and show that The Sequencer recovers that pattern. Examples include ordering spectral measurements of stars by their temperature and <a href="https://en.wikipedia.org/wiki/Quasar">quasars</a> by their <a href="https://en.wikipedia.org/wiki/Redshift_survey">redshift</a>, a measure of their distance from us on Earth.</p>
<p>But, what about new patterns? The team has already applied The Sequencer to mine seismographic data and discover previously unknown formations deep within the earth, at the boundary between the core and <a href="https://en.wikipedia.org/wiki/Core%E2%80%93mantle_boundary">mantle</a>. By sequencing the seismic waves, they realized that the main trend was the amplitude of diffraction off of these structures, which they were then able to localize beneath Hawaii and the Marquesas (DOI: <a href="https://doi.org/10.1126/science.aba8972" aria-label="Link to article, 'Sequencing seismograms: A panoptic view of scattering in the core-mantle boundary region'">10.1126/science.aba8972</a>).</p>
<p>For more demonstrations and discoveries, or even to upload your own data for sequencing, <a href="http://sequencer.org/">check out the project website</a>. Data sleuths can also download all of the code directly from <a href="https://github.com/dalya/Sequencer">GitHub</a> and sequence to their hearts’ content!<br>
<br>
</p>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-6">
<dl>
<dt>About the author</dt>
<dd>
<strong>Andrew Saydjari</strong> is a graduate student in physics at Harvard researching the spatial and chemical variations of dust in the interstellar medium. He favors using interpretable statistics and large photometric and spectroscopic surveys.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>About DataScienceBites</dt>
<dd>
<a href="../../../../../../ideas/datasciencebites/index.html"><strong>DataScienceBites</strong></a> is written by graduate students and early career researchers in data science (and related subjects) at universities throughout the world, as well as industry researchers. We publish digestible, engaging summaries of interesting new pre-print and peer-reviewed publications in the data science space, with the goal of making scientific papers more accessible. Find out how to <a href="../../../../../../contributor-docs/datasciencebites.html">become a contributor</a>.
</dd>
</dl>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>Data management</category>
  <category>Dimension reduction</category>
  <category>Graph theory</category>
  <guid>https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/01/24/pulling-patterns.html</guid>
  <pubDate>Tue, 24 Jan 2023 00:00:00 GMT</pubDate>
  <media:content url="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2023/01/24/images/signal-from-noise.png" medium="image" type="image/png" height="115" width="144"/>
</item>
<item>
  <title>Determining the best way to route drivers for ridesharing via reinforcement learning</title>
  <dc:creator>Brian King</dc:creator>
  <link>https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2022/12/13/ridesharing.html</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-note callout-titled" style="margin-top: 0rem;">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About the paper and this post
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<p><strong>Title:</strong> Dynamic causal effects evaluation in A/B testing with a reinforcement learning framework</p>
<p><strong>Author(s) and year:</strong> Chengchun Shi, Xiaoyu Wang, Shikai Luo, Hongtu Zhu, Jieping Ye, Rui Song (2022)</p>
<p><strong>Status:</strong> Published in <em>Journal of the American Statistical Association, Theory and Methods</em>, open access: <a href="https://www.tandfonline.com/doi/full/10.1080/01621459.2022.2027776">HTML</a>, <a href="https://www.tandfonline.com/doi/epdf/10.1080/01621459.2022.2027776?needAccess=true&amp;role=button">PDF</a>, <a href="https://www.tandfonline.com/doi/epub/10.1080/01621459.2022.2027776?needAccess=true&amp;role=button">EPUB</a>.</p>
<p><strong>Editor’s note:</strong> This post is republished with permission from <a href="https://mathstatbites.org/determining-the-best-way-to-route-drivers-for-ridesharing-via-reinforcement-learning/">MathStatBites</a> to demonstrate the Bites concept. See <a href="../../../../../../contributor-docs/datasciencebites.html">here</a> for more information.</p>
</div>
</div>
</div>
<p>Companies often want to test the impact of one design decision over another, for example Google might want to compare the current ranking of search results (version A) with an alternative ranking (version B) and evaluate how the modification would affect users’ decisions and click behavior. An experiment to determine this impact on users is known as an A/B test, and many methods have been designed to measure the “treatment” effect of the proposed change. However, these classical methods typically assume that changing one person’s treatment will not affect others (known as the Stable Unit Treatment Value Assumption or SUTVA). In the Google example, this is typically a valid assumption — showing one user different search results shouldn’t impact another user’s click behavior. But in some situations, SUTVA is violated, and new methods must be introduced to properly measure the effect of design changes.</p>
<p>One such situation is that of ridesharing companies (Uber, Lyft, etc.) and how they determine which drivers are sent to which riders (the dispatch problem). Simply put, when a driver is assigned to a rider, this decision impacts the spatial distribution of drivers in the future. Hence the dispatch strategy (our treatment) at the present time will influence riders and drivers in the future, which violates SUTVA and hence invalidates many traditional methods for A/B testing. To tackle this problem, a group of researchers have recently employed a reinforcement learning (RL) framework which can accurately measure the treatment effect in such a scenario. Furthermore, their proposed approach allows for companies to terminate A/B tests earlier if the proposed version B is found to be clearly better. This early stopping can save time and money.</p>
<p>To better understand RL and how it can contribute to tackling the issue at hand, it’s first helpful to set some context. In typical RL problems, including the one in this paper, the scenario is modeled with something known as a Markov Decision Process (MDP). A MDP links three sets of variables across time: the state or environment, the treatment or action (the reaction to the environment), and the outcome (the response produced by the environment due to the action). These outcomes can be thought of as rewards which depend on the action taken and the state observed. Over time, the machine learns which actions produce more positive rewards and which bring about worse outcomes. Hence, the actions leading to higher rewards are positively reinforced, thus the name reinforcement learning. A causal diagram of an MDP is shown in Figure 1, where <em>S</em><sub><em>t</em></sub>, <em>A</em><sub><em>t</em></sub>, and <em>Y</em><sub><em>t</em></sub> are the <strong>state</strong>, <strong>action</strong>, and <strong>outcome</strong> at time <em>t</em>. As one can see, past treatments influence future outcomes by altering the state variables at the present (the so-called “carryover effect” which violates SUTVA).</p>
<div class="column-page">
<p><img src="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2022/12/13/images/ridesharing-fig1.png" class="img-fluid" alt="A causal diagram of a Markov Decision Process is shown in this figure. Green circles represent states, with arrows leading to red diamonds and blue squares representing, respectively, actions and outcomes. Actions are linked to new states by arrows, and prior states are linked to new states by curved arrows. This illustration conveys how past treatments influence future outcomes by altering the state variables at the present (the so-called “carryover effect” which violates the stable unit treatment value assumption)."></p>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p><strong>Figure 1:</strong> Causal diagram of MDP, where the solid lines represent causal relationships.</p>
</div></div><p>Making this more concrete, consider an example where the decision-maker is a ridesharing company. The environment or <strong>state</strong> is whatever variables the decision-maker can measure about the world, like the spatial distribution of drivers, number of pickup requests, traffic, and weather. The company then makes some <strong>action</strong> on how to dispatch drivers. The combination of the state and action leads to an <strong>outcome</strong> that can be measured, for example passenger waiting time or driver’s income. The strategy which is used to determine an action is known as a policy. This policy could be designed to take the state into account or simply be fixed regardless of what environment is encountered. Much of the reinforcement learning literature focuses on the former (policies that depend on the state), but the authors argue that fixed designs are the de facto approach in industry A/B testing and hence they focus on that setting. In particular, a common treatment allocation design is the switchback design, where there are two policies of interest (the current dispatching strategy vs a proposed strategy) determined ahead of time and they are employed in alternating time intervals during the A/B test.</p>
<p>So how are policies compared to determine the treatment effect? The answer lies in what is known as the value function, which measures the total outcome that would have amassed had the decision-maker followed a given policy. The value function can put more value on short-term gain in outcome or long-term benefits. The two policies in an A/B test each have their own value functions, and a proposed policy is determined to be better if its value is (statistically) significantly higher. In the ridesharing setting, one possible outcome of interest is driver income. An A/B test in that scenario would thus look to see if a proposed policy had greater expected driver income vs the current policy.</p>
<p>A natural question is when to end the experiment and test for a difference in value. In practice, companies will often simply run the test for a prespecified amount of time, such as two weeks, and then perform an analysis. But if one policy is clearly better than another, that difference could be detectable much earlier and the company is wasting valuable resources by continuing the experiment. To address this issue, the authors take an idea from clinical trials, the “alpha-spending” approach, and adapt it to their framework. Alpha-spending is one way to distribute over time the prespecified “budget” of Type 1 error (the probability of falsely detecting that a new policy is better). In the article’s real-data example, the authors test once a day for each day after one week and are able to detect a significant difference on Day 12. Waiting until Day 14 would have resulted in poorer outcomes since a suboptimal policy would be implemented half the time for two more days.</p>
<p>Overall, the framework introduced allows for handling of carryover effects, is capable of modeling treatment allocation like the switchback design, and furthermore, allows for possible early stopping. With these three features, the authors argue their approach is highly applicable to the current practice of ridesharing companies (and possibly other industries as well). For interested readers wanting to dive deeper into the methodology presented, you can check out the <a href="https://www.tandfonline.com/doi/full/10.1080/01621459.2022.2027776">full article</a>, listen to the first author discuss the material at the <a href="https://www.youtube.com/watch?v=Zor1CmRyycw">Online Causal Inference Seminar</a> (embedded below), or explore the <a href="https://github.com/callmespring/CausalRL">Python implementation</a> available on GitHub.</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/Zor1CmRyycw" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<div class="further-info">
<div class="grid">
<div class="g-col-12 g-col-md-6">
<dl>
<dt>About the author</dt>
<dd>
<strong>Brian King</strong> is a PhD candidate in the Department of Statistics at Rice University and a current NSF Graduate Research Fellow, with research focused on Bayesian modeling and forecasting for time series of counts. Prior to Rice, he graduated from Baylor University with a B.S. in Mathematics and Statistics alongside a secondary major in Spanish and a minor in Computer Science.
</dd>
</dl>
</div>
<div class="g-col-12 g-col-md-6">
<dl>
<dt>About DataScienceBites</dt>
<dd>
<a href="../../../../../../ideas/datasciencebites/index.html"><strong>DataScienceBites</strong></a> is written by graduate students and early career researchers in data science (and related subjects) at universities throughout the world, as well as industry researchers. We publish digestible, engaging summaries of interesting new pre-print and peer-reviewed publications in the data science space, with the goal of making scientific papers more accessible. Find out how to <a href="../../../../../../contributor-docs/datasciencebites.html">become a contributor</a>.
</dd>
</dl>
</div>
</div>
</div>



 ]]></description>
  <category>A/B testing</category>
  <category>Reinforcement learning</category>
  <category>Statistics</category>
  <guid>https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2022/12/13/ridesharing.html</guid>
  <pubDate>Tue, 13 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://michaeldmiles.github.io/michaels-data-blog/ideas/datasciencebites/posts/2022/12/13/images/paul-hanaoka-D-qq7W751vs-unsplash.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
